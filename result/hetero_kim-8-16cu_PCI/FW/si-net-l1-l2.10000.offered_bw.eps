%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 07:27:02 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 07:27:02 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
3280 0 V
stroke
LTb
1190 448 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 684 M
3280 0 V
stroke
LTb
1190 684 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 5e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 920 M
3280 0 V
stroke
LTb
1190 920 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1156 M
3280 0 V
stroke
LTb
1190 1156 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1.5e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1392 M
3280 0 V
stroke
LTb
1190 1392 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 2e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1628 M
3280 0 V
stroke
LTb
1190 1628 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 2.5e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1864 M
3280 0 V
stroke
LTb
1190 1864 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 3e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2100 M
3280 0 V
stroke
LTb
1190 2100 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 3.5e+07) Rshow
1.000 UL
LTb
1190 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1606 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2022 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2439 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
2855 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
3271 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
3687 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3e+06) Cshow
1.000 UL
LTb
4104 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3.5e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1190 2100 N
0 -1652 V
3280 0 V
0 1652 V
-3280 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2830 98 M
(Time\(Cycle\)) Cshow
LTb
2830 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1190 448 M
8 223 V
9 184 V
8 1217 V
8 14 V
9 11 V
8 -483 V
8 -922 V
9 -182 V
8 -35 V
8 -16 V
9 1250 V
8 -1088 V
8 140 V
9 625 V
8 -746 V
8 564 V
9 -79 V
8 -211 V
8 547 V
8 -963 V
9 1094 V
8 -749 V
8 246 V
9 210 V
8 -547 V
8 840 V
9 -721 V
8 411 V
8 -255 V
9 -130 V
8 507 V
8 -646 V
9 576 V
8 -51 V
8 -535 V
9 800 V
8 -720 V
8 377 V
9 -32 V
8 -411 V
8 639 V
9 -758 V
8 755 V
8 -391 V
9 -54 V
8 546 V
8 -903 V
9 898 V
8 -164 V
8 -503 V
9 355 V
8 211 V
8 -738 V
9 693 V
8 -637 V
8 819 V
9 -930 V
8 742 V
8 -84 V
8 -528 V
9 653 V
8 -255 V
8 -399 V
9 641 V
8 -752 V
8 731 V
9 -414 V
8 425 V
8 -149 V
9 -103 V
8 181 V
8 79 V
9 -779 V
8 842 V
8 44 V
9 -840 V
8 768 V
8 -305 V
9 -452 V
8 1076 V
8 -726 V
9 -146 V
8 673 V
8 -726 V
9 438 V
8 -61 V
8 -152 V
9 506 V
8 -261 V
8 -242 V
9 519 V
8 -1017 V
8 1114 V
9 -506 V
8 -378 V
8 776 V
9 -777 V
8 511 V
8 -308 V
8 88 V
9 448 V
8 -911 V
8 812 V
9 -110 V
stroke 2056 1286 M
8 -114 V
8 -90 V
9 507 V
8 -1113 V
8 1017 V
9 -194 V
8 -781 V
8 1132 V
9 -1143 V
8 1023 V
8 -307 V
9 -516 V
8 865 V
8 -214 V
9 -404 V
8 388 V
8 49 V
9 -724 V
8 829 V
8 -500 V
9 -200 V
8 893 V
8 -697 V
9 -63 V
8 629 V
8 -343 V
9 -266 V
8 404 V
8 -39 V
9 -239 V
8 18 V
8 285 V
9 -673 V
8 774 V
8 -278 V
8 -305 V
9 258 V
8 428 V
8 -522 V
9 236 V
8 -517 V
8 307 V
9 391 V
8 -364 V
8 -208 V
9 626 V
8 -631 V
8 60 V
9 565 V
8 -324 V
8 -412 V
9 765 V
8 -360 V
8 -536 V
9 894 V
8 -907 V
8 530 V
9 274 V
8 -156 V
8 -478 V
9 497 V
8 68 V
8 -386 V
9 93 V
8 185 V
8 -589 V
9 627 V
8 32 V
8 -389 V
9 320 V
8 284 V
8 -981 V
9 929 V
8 -108 V
8 -332 V
8 29 V
9 227 V
8 -36 V
8 -536 V
9 700 V
8 -103 V
8 -208 V
9 -201 V
8 784 V
8 -581 V
9 -240 V
8 606 V
8 -160 V
9 -724 V
8 838 V
8 -160 V
9 -361 V
8 253 V
8 61 V
9 -502 V
8 726 V
8 -359 V
9 -357 V
8 983 V
8 -814 V
9 347 V
8 146 V
8 -361 V
9 -235 V
stroke 2922 827 M
8 667 V
8 -385 V
9 -109 V
8 476 V
8 -783 V
9 751 V
8 -238 V
8 -127 V
9 -43 V
8 156 V
8 -369 V
8 642 V
9 -653 V
8 310 V
8 393 V
9 -132 V
8 -506 V
8 554 V
9 -334 V
8 -295 V
8 700 V
9 -500 V
8 62 V
8 251 V
9 58 V
8 -740 V
8 903 V
9 -672 V
8 260 V
8 252 V
9 -128 V
8 -246 V
8 244 V
9 220 V
8 -148 V
8 -546 V
9 626 V
8 -146 V
8 -438 V
9 474 V
8 -541 V
8 578 V
9 -312 V
8 355 V
8 -272 V
9 21 V
8 38 V
8 335 V
8 -229 V
9 -450 V
8 519 V
8 -28 V
9 -87 V
8 -209 V
8 563 V
9 -1078 V
8 1064 V
8 -241 V
9 -635 V
8 543 V
8 130 V
9 -31 V
8 -114 V
8 -236 V
9 569 V
8 -656 V
8 186 V
9 288 V
8 43 V
8 -563 V
9 562 V
8 90 V
8 -114 V
9 -325 V
8 394 V
8 -827 V
9 1010 V
8 -483 V
8 -194 V
9 319 V
8 229 V
8 -747 V
9 371 V
8 379 V
8 -304 V
9 -301 V
8 471 V
8 28 V
8 -179 V
9 -285 V
8 372 V
8 70 V
9 -701 V
8 283 V
8 641 V
9 -400 V
8 -462 V
8 1116 V
9 -1130 V
8 636 V
8 163 V
9 -857 V
8 923 V
8 -198 V
stroke 3787 1388 M
9 -539 V
8 353 V
8 357 V
9 -481 V
8 -279 V
8 760 V
9 -160 V
8 -454 V
8 244 V
9 111 V
8 -143 V
8 -136 V
9 564 V
8 -307 V
8 -308 V
9 148 V
8 333 V
8 -33 V
9 -181 V
8 -142 V
8 129 V
9 502 V
8 -545 V
8 -81 V
8 -25 V
9 286 V
8 -11 V
8 -707 V
9 910 V
8 -152 V
8 -564 V
9 386 V
8 64 V
8 -375 V
9 378 V
8 93 V
8 -269 V
9 4 V
8 219 V
8 63 V
9 -334 V
8 -7 V
8 57 V
9 423 V
8 -221 V
8 -707 V
9 1068 V
8 -1032 V
8 818 V
9 -521 V
8 130 V
8 295 V
9 90 V
8 -227 V
8 -574 V
9 462 V
8 -188 V
8 389 V
9 170 V
8 -919 V
8 773 V
9 -122 V
8 -187 V
8 527 V
8 -435 V
9 -83 V
8 151 V
8 323 V
9 -664 V
8 172 V
8 465 V
9 -741 V
8 407 V
8 257 V
9 14 V
8 -317 V
8 -98 V
9 509 V
8 -394 V
8 -173 V
9 490 V
8 -408 V
1190 448 Crs
1198 671 Crs
1207 855 Crs
1215 2072 Crs
1223 2086 Crs
1232 2097 Crs
1240 1614 Crs
1248 692 Crs
1257 510 Crs
1265 475 Crs
1273 459 Crs
1282 1709 Crs
1290 621 Crs
1298 761 Crs
1307 1386 Crs
1315 640 Crs
1323 1204 Crs
1332 1125 Crs
1340 914 Crs
1348 1461 Crs
1356 498 Crs
1365 1592 Crs
1373 843 Crs
1381 1089 Crs
1390 1299 Crs
1398 752 Crs
1406 1592 Crs
1415 871 Crs
1423 1282 Crs
1431 1027 Crs
1440 897 Crs
1448 1404 Crs
1456 758 Crs
1465 1334 Crs
1473 1283 Crs
1481 748 Crs
1490 1548 Crs
1498 828 Crs
1506 1205 Crs
1515 1173 Crs
1523 762 Crs
1531 1401 Crs
1540 643 Crs
1548 1398 Crs
1556 1007 Crs
1565 953 Crs
1573 1499 Crs
1581 596 Crs
1590 1494 Crs
1598 1330 Crs
1606 827 Crs
1615 1182 Crs
1623 1393 Crs
1631 655 Crs
1640 1348 Crs
1648 711 Crs
1656 1530 Crs
1665 600 Crs
1673 1342 Crs
1681 1258 Crs
1689 730 Crs
1698 1383 Crs
1706 1128 Crs
1714 729 Crs
1723 1370 Crs
1731 618 Crs
1739 1349 Crs
1748 935 Crs
1756 1360 Crs
1764 1211 Crs
1773 1108 Crs
1781 1289 Crs
1789 1368 Crs
1798 589 Crs
1806 1431 Crs
1814 1475 Crs
1823 635 Crs
1831 1403 Crs
1839 1098 Crs
1848 646 Crs
1856 1722 Crs
1864 996 Crs
1873 850 Crs
1881 1523 Crs
1889 797 Crs
1898 1235 Crs
1906 1174 Crs
1914 1022 Crs
1923 1528 Crs
1931 1267 Crs
1939 1025 Crs
1948 1544 Crs
1956 527 Crs
1964 1641 Crs
1973 1135 Crs
1981 757 Crs
1989 1533 Crs
1998 756 Crs
2006 1267 Crs
2014 959 Crs
2022 1047 Crs
2031 1495 Crs
2039 584 Crs
2047 1396 Crs
2056 1286 Crs
2064 1172 Crs
2072 1082 Crs
2081 1589 Crs
2089 476 Crs
2097 1493 Crs
2106 1299 Crs
2114 518 Crs
2122 1650 Crs
2131 507 Crs
2139 1530 Crs
2147 1223 Crs
2156 707 Crs
2164 1572 Crs
2172 1358 Crs
2181 954 Crs
2189 1342 Crs
2197 1391 Crs
2206 667 Crs
2214 1496 Crs
2222 996 Crs
2231 796 Crs
2239 1689 Crs
2247 992 Crs
2256 929 Crs
2264 1558 Crs
2272 1215 Crs
2281 949 Crs
2289 1353 Crs
2297 1314 Crs
2306 1075 Crs
2314 1093 Crs
2322 1378 Crs
2331 705 Crs
2339 1479 Crs
2347 1201 Crs
2355 896 Crs
2364 1154 Crs
2372 1582 Crs
2380 1060 Crs
2389 1296 Crs
2397 779 Crs
2405 1086 Crs
2414 1477 Crs
2422 1113 Crs
2430 905 Crs
2439 1531 Crs
2447 900 Crs
2455 960 Crs
2464 1525 Crs
2472 1201 Crs
2480 789 Crs
2489 1554 Crs
2497 1194 Crs
2505 658 Crs
2514 1552 Crs
2522 645 Crs
2530 1175 Crs
2539 1449 Crs
2547 1293 Crs
2555 815 Crs
2564 1312 Crs
2572 1380 Crs
2580 994 Crs
2589 1087 Crs
2597 1272 Crs
2605 683 Crs
2614 1310 Crs
2622 1342 Crs
2630 953 Crs
2639 1273 Crs
2647 1557 Crs
2655 576 Crs
2664 1505 Crs
2672 1397 Crs
2680 1065 Crs
2688 1094 Crs
2697 1321 Crs
2705 1285 Crs
2713 749 Crs
2722 1449 Crs
2730 1346 Crs
2738 1138 Crs
2747 937 Crs
2755 1721 Crs
2763 1140 Crs
2772 900 Crs
2780 1506 Crs
2788 1346 Crs
2797 622 Crs
2805 1460 Crs
2813 1300 Crs
2822 939 Crs
2830 1192 Crs
2838 1253 Crs
2847 751 Crs
2855 1477 Crs
2863 1118 Crs
2872 761 Crs
2880 1744 Crs
2888 930 Crs
2897 1277 Crs
2905 1423 Crs
2913 1062 Crs
2922 827 Crs
2930 1494 Crs
2938 1109 Crs
2947 1000 Crs
2955 1476 Crs
2963 693 Crs
2972 1444 Crs
2980 1206 Crs
2988 1079 Crs
2997 1036 Crs
3005 1192 Crs
3013 823 Crs
3021 1465 Crs
3030 812 Crs
3038 1122 Crs
3046 1515 Crs
3055 1383 Crs
3063 877 Crs
3071 1431 Crs
3080 1097 Crs
3088 802 Crs
3096 1502 Crs
3105 1002 Crs
3113 1064 Crs
3121 1315 Crs
3130 1373 Crs
3138 633 Crs
3146 1536 Crs
3155 864 Crs
3163 1124 Crs
3171 1376 Crs
3180 1248 Crs
3188 1002 Crs
3196 1246 Crs
3205 1466 Crs
3213 1318 Crs
3221 772 Crs
3230 1398 Crs
3238 1252 Crs
3246 814 Crs
3255 1288 Crs
3263 747 Crs
3271 1325 Crs
3280 1013 Crs
3288 1368 Crs
3296 1096 Crs
3305 1117 Crs
3313 1155 Crs
3321 1490 Crs
3329 1261 Crs
3338 811 Crs
3346 1330 Crs
3354 1302 Crs
3363 1215 Crs
3371 1006 Crs
3379 1569 Crs
3388 491 Crs
3396 1555 Crs
3404 1314 Crs
3413 679 Crs
3421 1222 Crs
3429 1352 Crs
3438 1321 Crs
3446 1207 Crs
3454 971 Crs
3463 1540 Crs
3471 884 Crs
3479 1070 Crs
3488 1358 Crs
3496 1401 Crs
3504 838 Crs
3513 1400 Crs
3521 1490 Crs
3529 1376 Crs
3538 1051 Crs
3546 1445 Crs
3554 618 Crs
3563 1628 Crs
3571 1145 Crs
3579 951 Crs
3588 1270 Crs
3596 1499 Crs
3604 752 Crs
3613 1123 Crs
3621 1502 Crs
3629 1198 Crs
3638 897 Crs
3646 1368 Crs
3654 1396 Crs
3662 1217 Crs
3671 932 Crs
3679 1304 Crs
3687 1374 Crs
3696 673 Crs
3704 956 Crs
3712 1597 Crs
3721 1197 Crs
3729 735 Crs
3737 1851 Crs
3746 721 Crs
3754 1357 Crs
3762 1520 Crs
3771 663 Crs
3779 1586 Crs
3787 1388 Crs
3796 849 Crs
3804 1202 Crs
3812 1559 Crs
3821 1078 Crs
3829 799 Crs
3837 1559 Crs
3846 1399 Crs
3854 945 Crs
3862 1189 Crs
3871 1300 Crs
3879 1157 Crs
3887 1021 Crs
3896 1585 Crs
3904 1278 Crs
3912 970 Crs
3921 1118 Crs
3929 1451 Crs
3937 1418 Crs
3946 1237 Crs
3954 1095 Crs
3962 1224 Crs
3971 1726 Crs
3979 1181 Crs
3987 1100 Crs
3995 1075 Crs
4004 1361 Crs
4012 1350 Crs
4020 643 Crs
4029 1553 Crs
4037 1401 Crs
4045 837 Crs
4054 1223 Crs
4062 1287 Crs
4070 912 Crs
4079 1290 Crs
4087 1383 Crs
4095 1114 Crs
4104 1118 Crs
4112 1337 Crs
4120 1400 Crs
4129 1066 Crs
4137 1059 Crs
4145 1116 Crs
4154 1539 Crs
4162 1318 Crs
4170 611 Crs
4179 1679 Crs
4187 647 Crs
4195 1465 Crs
4204 944 Crs
4212 1074 Crs
4220 1369 Crs
4229 1459 Crs
4237 1232 Crs
4245 658 Crs
4254 1120 Crs
4262 932 Crs
4270 1321 Crs
4279 1491 Crs
4287 572 Crs
4295 1345 Crs
4304 1223 Crs
4312 1036 Crs
4320 1563 Crs
4328 1128 Crs
4337 1045 Crs
4345 1196 Crs
4353 1519 Crs
4362 855 Crs
4370 1027 Crs
4378 1492 Crs
4387 751 Crs
4395 1158 Crs
4403 1415 Crs
4412 1429 Crs
4420 1112 Crs
4428 1014 Crs
4437 1523 Crs
4445 1129 Crs
4453 956 Crs
4462 1446 Crs
4470 1038 Crs
1.000 UL
LTb
1190 2100 N
0 -1652 V
3280 0 V
0 1652 V
-3280 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
