%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 18:59:05 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 18:59:05 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 613 M
3364 0 V
stroke
LTb
1106 613 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 10000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 778 M
3364 0 V
stroke
LTb
1106 778 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 944 M
3364 0 V
stroke
LTb
1106 944 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 30000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1109 M
3364 0 V
stroke
LTb
1106 1109 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1274 M
3364 0 V
stroke
LTb
1106 1274 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 50000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1439 M
3364 0 V
stroke
LTb
1106 1439 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 60000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1604 M
3364 0 V
stroke
LTb
1106 1604 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 70000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1770 M
3364 0 V
stroke
LTb
1106 1770 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 80000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1935 M
3364 0 V
stroke
LTb
1106 1935 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 90000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1947 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2788 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
3629 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
4470 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
17 1162 V
17 99 V
16 -190 V
17 -98 V
17 188 V
17 135 V
17 -178 V
17 5 V
16 75 V
17 162 V
17 134 V
17 -140 V
17 283 V
16 -226 V
17 7 V
17 -1 V
17 4 V
17 155 V
17 -163 V
16 -321 V
17 -176 V
17 99 V
17 72 V
17 -49 V
17 -189 V
16 162 V
17 130 V
17 -133 V
17 145 V
17 22 V
16 -370 V
17 475 V
17 59 V
17 -393 V
17 361 V
17 -147 V
16 -20 V
17 -164 V
17 204 V
17 55 V
17 -215 V
16 -11 V
17 161 V
17 42 V
17 -279 V
17 219 V
17 -74 V
16 -274 V
17 88 V
17 -114 V
17 83 V
17 -59 V
16 176 V
17 119 V
17 -171 V
17 -25 V
17 -117 V
17 279 V
16 -343 V
17 -65 V
17 2 V
17 30 V
17 94 V
16 77 V
17 42 V
17 -136 V
17 66 V
17 25 V
17 -106 V
16 1 V
17 159 V
17 250 V
17 -60 V
17 -101 V
17 -45 V
16 -32 V
17 119 V
17 -270 V
17 -63 V
17 143 V
16 262 V
17 -475 V
17 47 V
17 159 V
17 -61 V
17 -73 V
16 -15 V
17 308 V
17 -88 V
17 -297 V
17 174 V
16 99 V
17 -72 V
17 -66 V
17 -70 V
17 -100 V
17 399 V
16 -218 V
17 10 V
17 89 V
17 167 V
17 -330 V
16 -60 V
17 154 V
stroke 2855 1241 M
17 224 V
17 -41 V
17 29 V
17 -12 V
16 27 V
17 -442 V
17 331 V
17 -165 V
17 -37 V
16 121 V
17 151 V
17 12 V
17 -267 V
17 345 V
17 -225 V
16 189 V
17 -211 V
17 120 V
17 -115 V
17 16 V
17 -68 V
16 119 V
17 3 V
17 -253 V
17 238 V
17 225 V
16 -125 V
17 -119 V
17 121 V
17 -43 V
17 -89 V
17 -70 V
16 308 V
17 -266 V
17 15 V
17 53 V
17 242 V
16 -430 V
17 -24 V
17 561 V
17 -319 V
17 85 V
17 -192 V
16 233 V
17 138 V
17 -273 V
17 -137 V
17 -2 V
16 63 V
17 -78 V
17 40 V
17 306 V
17 -192 V
17 -42 V
16 87 V
17 -88 V
17 150 V
17 72 V
17 -186 V
16 44 V
17 158 V
17 -87 V
17 113 V
17 -138 V
17 110 V
16 -211 V
17 235 V
17 -96 V
17 -76 V
17 65 V
17 45 V
16 22 V
17 -79 V
17 28 V
17 170 V
17 17 V
16 -33 V
17 -168 V
17 -114 V
17 211 V
17 -86 V
17 60 V
16 50 V
17 -122 V
17 46 V
17 75 V
17 21 V
16 -77 V
17 102 V
17 -5 V
17 97 V
17 -12 V
17 62 V
16 -22 V
17 -116 V
17 -303 V
1106 448 Crs
1123 1610 Crs
1140 1709 Crs
1156 1519 Crs
1173 1421 Crs
1190 1609 Crs
1207 1744 Crs
1224 1566 Crs
1241 1571 Crs
1257 1646 Crs
1274 1808 Crs
1291 1942 Crs
1308 1802 Crs
1325 2085 Crs
1341 1859 Crs
1358 1866 Crs
1375 1865 Crs
1392 1869 Crs
1409 2024 Crs
1426 1861 Crs
1442 1540 Crs
1459 1364 Crs
1476 1463 Crs
1493 1535 Crs
1510 1486 Crs
1527 1297 Crs
1543 1459 Crs
1560 1589 Crs
1577 1456 Crs
1594 1601 Crs
1611 1623 Crs
1627 1253 Crs
1644 1728 Crs
1661 1787 Crs
1678 1394 Crs
1695 1755 Crs
1712 1608 Crs
1728 1588 Crs
1745 1424 Crs
1762 1628 Crs
1779 1683 Crs
1796 1468 Crs
1812 1457 Crs
1829 1618 Crs
1846 1660 Crs
1863 1381 Crs
1880 1600 Crs
1897 1526 Crs
1913 1252 Crs
1930 1340 Crs
1947 1226 Crs
1964 1309 Crs
1981 1250 Crs
1997 1426 Crs
2014 1545 Crs
2031 1374 Crs
2048 1349 Crs
2065 1232 Crs
2082 1511 Crs
2098 1168 Crs
2115 1103 Crs
2132 1105 Crs
2149 1135 Crs
2166 1229 Crs
2182 1306 Crs
2199 1348 Crs
2216 1212 Crs
2233 1278 Crs
2250 1303 Crs
2267 1197 Crs
2283 1198 Crs
2300 1357 Crs
2317 1607 Crs
2334 1547 Crs
2351 1446 Crs
2368 1401 Crs
2384 1369 Crs
2401 1488 Crs
2418 1218 Crs
2435 1155 Crs
2452 1298 Crs
2468 1560 Crs
2485 1085 Crs
2502 1132 Crs
2519 1291 Crs
2536 1230 Crs
2553 1157 Crs
2569 1142 Crs
2586 1450 Crs
2603 1362 Crs
2620 1065 Crs
2637 1239 Crs
2653 1338 Crs
2670 1266 Crs
2687 1200 Crs
2704 1130 Crs
2721 1030 Crs
2738 1429 Crs
2754 1211 Crs
2771 1221 Crs
2788 1310 Crs
2805 1477 Crs
2822 1147 Crs
2838 1087 Crs
2855 1241 Crs
2872 1465 Crs
2889 1424 Crs
2906 1453 Crs
2923 1441 Crs
2939 1468 Crs
2956 1026 Crs
2973 1357 Crs
2990 1192 Crs
3007 1155 Crs
3023 1276 Crs
3040 1427 Crs
3057 1439 Crs
3074 1172 Crs
3091 1517 Crs
3108 1292 Crs
3124 1481 Crs
3141 1270 Crs
3158 1390 Crs
3175 1275 Crs
3192 1291 Crs
3209 1223 Crs
3225 1342 Crs
3242 1345 Crs
3259 1092 Crs
3276 1330 Crs
3293 1555 Crs
3309 1430 Crs
3326 1311 Crs
3343 1432 Crs
3360 1389 Crs
3377 1300 Crs
3394 1230 Crs
3410 1538 Crs
3427 1272 Crs
3444 1287 Crs
3461 1340 Crs
3478 1582 Crs
3494 1152 Crs
3511 1128 Crs
3528 1689 Crs
3545 1370 Crs
3562 1455 Crs
3579 1263 Crs
3595 1496 Crs
3612 1634 Crs
3629 1361 Crs
3646 1224 Crs
3663 1222 Crs
3679 1285 Crs
3696 1207 Crs
3713 1247 Crs
3730 1553 Crs
3747 1361 Crs
3764 1319 Crs
3780 1406 Crs
3797 1318 Crs
3814 1468 Crs
3831 1540 Crs
3848 1354 Crs
3864 1398 Crs
3881 1556 Crs
3898 1469 Crs
3915 1582 Crs
3932 1444 Crs
3949 1554 Crs
3965 1343 Crs
3982 1578 Crs
3999 1482 Crs
4016 1406 Crs
4033 1471 Crs
4050 1516 Crs
4066 1538 Crs
4083 1459 Crs
4100 1487 Crs
4117 1657 Crs
4134 1674 Crs
4150 1641 Crs
4167 1473 Crs
4184 1359 Crs
4201 1570 Crs
4218 1484 Crs
4235 1544 Crs
4251 1594 Crs
4268 1472 Crs
4285 1518 Crs
4302 1593 Crs
4319 1614 Crs
4335 1537 Crs
4352 1639 Crs
4369 1634 Crs
4386 1731 Crs
4403 1719 Crs
4420 1781 Crs
4436 1759 Crs
4453 1643 Crs
4470 1340 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
