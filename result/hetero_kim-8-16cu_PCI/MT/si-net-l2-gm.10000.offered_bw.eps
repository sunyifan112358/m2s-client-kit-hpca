%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 19:34:42 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 19:34:42 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 684 M
3364 0 V
stroke
LTb
1106 684 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 50000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 920 M
3364 0 V
stroke
LTb
1106 920 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1156 M
3364 0 V
stroke
LTb
1106 1156 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 150000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1392 M
3364 0 V
stroke
LTb
1106 1392 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 200000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1628 M
3364 0 V
stroke
LTb
1106 1628 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 250000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1864 M
3364 0 V
stroke
LTb
1106 1864 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 300000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 350000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1588 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2070 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2552 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
3034 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
3516 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
3998 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
10 1551 V
9 -556 V
10 -493 V
10 3 V
9 -14 V
10 -29 V
9 -4 V
10 16 V
10 13 V
9 -13 V
10 -5 V
10 6 V
9 10 V
10 -5 V
10 0 V
9 0 V
10 -7 V
10 3 V
9 -17 V
10 -16 V
9 -7 V
10 2 V
10 3 V
9 -7 V
10 9 V
10 9 V
9 -12 V
10 -40 V
10 -7 V
9 4 V
10 -12 V
9 -9 V
10 -34 V
10 -107 V
9 -13 V
10 11 V
10 50 V
9 -61 V
10 70 V
10 9 V
9 34 V
10 52 V
9 -17 V
10 63 V
10 -3 V
9 -69 V
10 -34 V
10 -41 V
9 -65 V
10 21 V
10 98 V
9 -68 V
10 97 V
10 -6 V
9 -19 V
10 20 V
9 -5 V
10 15 V
10 -65 V
9 57 V
10 21 V
10 -23 V
9 99 V
10 -101 V
10 -151 V
9 103 V
10 5 V
9 145 V
10 -10 V
10 -21 V
9 -28 V
10 -50 V
10 68 V
9 15 V
10 -14 V
10 -53 V
9 85 V
10 -105 V
9 15 V
10 31 V
10 11 V
9 -67 V
10 50 V
10 -44 V
9 -68 V
10 45 V
10 109 V
9 -176 V
10 70 V
10 55 V
9 -70 V
10 -52 V
9 136 V
10 -145 V
10 112 V
9 9 V
10 -30 V
10 -50 V
9 -15 V
10 62 V
10 -62 V
9 -1 V
10 27 V
9 -11 V
stroke 2108 740 M
10 67 V
10 -13 V
9 48 V
10 -35 V
10 -70 V
9 27 V
10 57 V
10 -101 V
9 62 V
10 -56 V
9 59 V
10 10 V
10 -130 V
9 -15 V
10 118 V
10 -56 V
9 11 V
10 25 V
10 38 V
9 -6 V
10 15 V
10 -59 V
9 30 V
10 -34 V
9 62 V
10 -5 V
10 2 V
9 0 V
10 43 V
10 -30 V
9 2 V
10 -101 V
10 91 V
9 46 V
10 -1 V
9 -70 V
10 58 V
10 -42 V
9 37 V
10 -18 V
10 71 V
9 -46 V
10 -42 V
10 27 V
9 -3 V
10 47 V
9 30 V
10 -31 V
10 0 V
9 4 V
10 14 V
10 12 V
9 -20 V
10 -11 V
10 -57 V
9 65 V
10 -48 V
10 -17 V
9 -33 V
10 122 V
9 -6 V
10 -62 V
10 2 V
9 -19 V
10 55 V
10 -69 V
9 2 V
10 87 V
10 -14 V
9 -33 V
10 16 V
9 46 V
10 -98 V
10 -32 V
9 84 V
10 15 V
10 21 V
9 -27 V
10 -52 V
10 17 V
9 -38 V
10 -52 V
9 -5 V
10 144 V
10 16 V
9 -51 V
10 77 V
10 -64 V
9 23 V
10 73 V
10 -63 V
9 -21 V
10 4 V
10 -50 V
9 -18 V
10 105 V
9 -5 V
10 -99 V
10 81 V
9 33 V
10 10 V
10 -33 V
9 -42 V
10 45 V
stroke 3111 893 M
10 -31 V
9 -85 V
10 10 V
9 90 V
10 -96 V
10 -28 V
9 51 V
10 0 V
10 34 V
9 -6 V
10 -40 V
10 37 V
9 -22 V
10 35 V
9 -3 V
10 -7 V
10 6 V
9 -52 V
10 53 V
10 -62 V
9 -11 V
10 76 V
10 -16 V
9 -9 V
10 35 V
10 -2 V
9 -66 V
10 108 V
9 -53 V
10 46 V
10 -45 V
9 -64 V
10 73 V
10 6 V
9 3 V
10 -37 V
10 -47 V
9 -42 V
10 104 V
9 -63 V
10 29 V
10 -28 V
9 58 V
10 -47 V
10 -13 V
9 -78 V
10 129 V
10 43 V
9 20 V
10 -22 V
9 -50 V
10 -27 V
10 49 V
9 8 V
10 -36 V
10 28 V
9 -9 V
10 -1 V
10 3 V
9 26 V
10 3 V
10 9 V
9 -16 V
10 38 V
9 -77 V
10 -60 V
10 -54 V
9 138 V
10 -5 V
10 -36 V
9 47 V
10 -18 V
10 12 V
9 44 V
10 -92 V
9 -39 V
10 48 V
10 46 V
9 -27 V
10 42 V
10 1 V
9 -19 V
10 -30 V
10 -25 V
9 -24 V
10 56 V
9 0 V
10 27 V
10 15 V
9 -42 V
10 27 V
10 -51 V
9 -4 V
10 -7 V
10 46 V
9 -12 V
10 -24 V
10 57 V
9 -26 V
10 8 V
9 40 V
10 -48 V
10 -19 V
9 20 V
stroke 4113 824 M
10 -11 V
10 -8 V
9 -35 V
10 14 V
10 8 V
9 -41 V
10 -75 V
9 74 V
10 86 V
10 -80 V
9 23 V
10 -1 V
10 17 V
9 -34 V
10 37 V
10 -22 V
9 38 V
10 1 V
9 -10 V
10 -14 V
10 -6 V
9 6 V
10 7 V
10 2 V
9 0 V
10 -13 V
10 -22 V
9 21 V
10 -32 V
10 -37 V
9 -18 V
10 13 V
9 -21 V
10 -13 V
10 -18 V
9 -81 V
10 -103 V
1106 448 Crs
1116 1999 Crs
1125 1443 Crs
1135 950 Crs
1145 953 Crs
1154 939 Crs
1164 910 Crs
1173 906 Crs
1183 922 Crs
1193 935 Crs
1202 922 Crs
1212 917 Crs
1222 923 Crs
1231 933 Crs
1241 928 Crs
1251 928 Crs
1260 928 Crs
1270 921 Crs
1280 924 Crs
1289 907 Crs
1299 891 Crs
1308 884 Crs
1318 886 Crs
1328 889 Crs
1337 882 Crs
1347 891 Crs
1357 900 Crs
1366 888 Crs
1376 848 Crs
1386 841 Crs
1395 845 Crs
1405 833 Crs
1414 824 Crs
1424 790 Crs
1434 683 Crs
1443 670 Crs
1453 681 Crs
1463 731 Crs
1472 670 Crs
1482 740 Crs
1492 749 Crs
1501 783 Crs
1511 835 Crs
1520 818 Crs
1530 881 Crs
1540 878 Crs
1549 809 Crs
1559 775 Crs
1569 734 Crs
1578 669 Crs
1588 690 Crs
1598 788 Crs
1607 720 Crs
1617 817 Crs
1627 811 Crs
1636 792 Crs
1646 812 Crs
1655 807 Crs
1665 822 Crs
1675 757 Crs
1684 814 Crs
1694 835 Crs
1704 812 Crs
1713 911 Crs
1723 810 Crs
1733 659 Crs
1742 762 Crs
1752 767 Crs
1761 912 Crs
1771 902 Crs
1781 881 Crs
1790 853 Crs
1800 803 Crs
1810 871 Crs
1819 886 Crs
1829 872 Crs
1839 819 Crs
1848 904 Crs
1858 799 Crs
1867 814 Crs
1877 845 Crs
1887 856 Crs
1896 789 Crs
1906 839 Crs
1916 795 Crs
1925 727 Crs
1935 772 Crs
1945 881 Crs
1954 705 Crs
1964 775 Crs
1974 830 Crs
1983 760 Crs
1993 708 Crs
2002 844 Crs
2012 699 Crs
2022 811 Crs
2031 820 Crs
2041 790 Crs
2051 740 Crs
2060 725 Crs
2070 787 Crs
2080 725 Crs
2089 724 Crs
2099 751 Crs
2108 740 Crs
2118 807 Crs
2128 794 Crs
2137 842 Crs
2147 807 Crs
2157 737 Crs
2166 764 Crs
2176 821 Crs
2186 720 Crs
2195 782 Crs
2205 726 Crs
2214 785 Crs
2224 795 Crs
2234 665 Crs
2243 650 Crs
2253 768 Crs
2263 712 Crs
2272 723 Crs
2282 748 Crs
2292 786 Crs
2301 780 Crs
2311 795 Crs
2321 736 Crs
2330 766 Crs
2340 732 Crs
2349 794 Crs
2359 789 Crs
2369 791 Crs
2378 791 Crs
2388 834 Crs
2398 804 Crs
2407 806 Crs
2417 705 Crs
2427 796 Crs
2436 842 Crs
2446 841 Crs
2455 771 Crs
2465 829 Crs
2475 787 Crs
2484 824 Crs
2494 806 Crs
2504 877 Crs
2513 831 Crs
2523 789 Crs
2533 816 Crs
2542 813 Crs
2552 860 Crs
2561 890 Crs
2571 859 Crs
2581 859 Crs
2590 863 Crs
2600 877 Crs
2610 889 Crs
2619 869 Crs
2629 858 Crs
2639 801 Crs
2648 866 Crs
2658 818 Crs
2668 801 Crs
2677 768 Crs
2687 890 Crs
2696 884 Crs
2706 822 Crs
2716 824 Crs
2725 805 Crs
2735 860 Crs
2745 791 Crs
2754 793 Crs
2764 880 Crs
2774 866 Crs
2783 833 Crs
2793 849 Crs
2802 895 Crs
2812 797 Crs
2822 765 Crs
2831 849 Crs
2841 864 Crs
2851 885 Crs
2860 858 Crs
2870 806 Crs
2880 823 Crs
2889 785 Crs
2899 733 Crs
2908 728 Crs
2918 872 Crs
2928 888 Crs
2937 837 Crs
2947 914 Crs
2957 850 Crs
2966 873 Crs
2976 946 Crs
2986 883 Crs
2995 862 Crs
3005 866 Crs
3015 816 Crs
3024 798 Crs
3034 903 Crs
3043 898 Crs
3053 799 Crs
3063 880 Crs
3072 913 Crs
3082 923 Crs
3092 890 Crs
3101 848 Crs
3111 893 Crs
3121 862 Crs
3130 777 Crs
3140 787 Crs
3149 877 Crs
3159 781 Crs
3169 753 Crs
3178 804 Crs
3188 804 Crs
3198 838 Crs
3207 832 Crs
3217 792 Crs
3227 829 Crs
3236 807 Crs
3246 842 Crs
3255 839 Crs
3265 832 Crs
3275 838 Crs
3284 786 Crs
3294 839 Crs
3304 777 Crs
3313 766 Crs
3323 842 Crs
3333 826 Crs
3342 817 Crs
3352 852 Crs
3362 850 Crs
3371 784 Crs
3381 892 Crs
3390 839 Crs
3400 885 Crs
3410 840 Crs
3419 776 Crs
3429 849 Crs
3439 855 Crs
3448 858 Crs
3458 821 Crs
3468 774 Crs
3477 732 Crs
3487 836 Crs
3496 773 Crs
3506 802 Crs
3516 774 Crs
3525 832 Crs
3535 785 Crs
3545 772 Crs
3554 694 Crs
3564 823 Crs
3574 866 Crs
3583 886 Crs
3593 864 Crs
3602 814 Crs
3612 787 Crs
3622 836 Crs
3631 844 Crs
3641 808 Crs
3651 836 Crs
3660 827 Crs
3670 826 Crs
3680 829 Crs
3689 855 Crs
3699 858 Crs
3709 867 Crs
3718 851 Crs
3728 889 Crs
3737 812 Crs
3747 752 Crs
3757 698 Crs
3766 836 Crs
3776 831 Crs
3786 795 Crs
3795 842 Crs
3805 824 Crs
3815 836 Crs
3824 880 Crs
3834 788 Crs
3843 749 Crs
3853 797 Crs
3863 843 Crs
3872 816 Crs
3882 858 Crs
3892 859 Crs
3901 840 Crs
3911 810 Crs
3921 785 Crs
3930 761 Crs
3940 817 Crs
3949 817 Crs
3959 844 Crs
3969 859 Crs
3978 817 Crs
3988 844 Crs
3998 793 Crs
4007 789 Crs
4017 782 Crs
4027 828 Crs
4036 816 Crs
4046 792 Crs
4056 849 Crs
4065 823 Crs
4075 831 Crs
4084 871 Crs
4094 823 Crs
4104 804 Crs
4113 824 Crs
4123 813 Crs
4133 805 Crs
4142 770 Crs
4152 784 Crs
4162 792 Crs
4171 751 Crs
4181 676 Crs
4190 750 Crs
4200 836 Crs
4210 756 Crs
4219 779 Crs
4229 778 Crs
4239 795 Crs
4248 761 Crs
4258 798 Crs
4268 776 Crs
4277 814 Crs
4287 815 Crs
4296 805 Crs
4306 791 Crs
4316 785 Crs
4325 791 Crs
4335 798 Crs
4345 800 Crs
4354 800 Crs
4364 787 Crs
4374 765 Crs
4383 786 Crs
4393 754 Crs
4403 717 Crs
4412 699 Crs
4422 712 Crs
4431 691 Crs
4441 678 Crs
4451 660 Crs
4460 579 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
