%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 19:34:42 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 19:34:42 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
3280 0 V
stroke
LTb
1190 448 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 613 M
3280 0 V
stroke
LTb
1190 613 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 200000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 778 M
3280 0 V
stroke
LTb
1190 778 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 400000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 944 M
3280 0 V
stroke
LTb
1190 944 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 600000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1109 M
3280 0 V
stroke
LTb
1190 1109 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 800000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1274 M
3280 0 V
stroke
LTb
1190 1274 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1439 M
3280 0 V
stroke
LTb
1190 1439 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1.2e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1604 M
3280 0 V
stroke
LTb
1190 1604 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1.4e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1770 M
3280 0 V
stroke
LTb
1190 1770 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1.6e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1935 M
3280 0 V
stroke
LTb
1190 1935 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1.8e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2100 M
3280 0 V
stroke
LTb
1190 2100 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 2e+06) Rshow
1.000 UL
LTb
1190 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1660 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2130 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2600 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
3070 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
3540 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
4009 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1190 2100 N
0 -1652 V
3280 0 V
0 1652 V
-3280 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2830 98 M
(Time\(Cycle\)) Cshow
LTb
2830 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1190 448 M
9 548 V
10 -101 V
9 13 V
10 -235 V
9 97 V
9 -110 V
10 10 V
9 28 V
10 -80 V
9 45 V
9 -52 V
10 31 V
9 17 V
10 -34 V
9 47 V
9 -20 V
10 -3 V
9 5 V
10 30 V
9 126 V
9 -3 V
10 60 V
9 -74 V
10 31 V
9 184 V
9 8 V
10 187 V
9 -287 V
10 43 V
9 130 V
9 184 V
10 -35 V
9 167 V
10 -473 V
9 -121 V
9 256 V
10 -93 V
9 -171 V
10 322 V
9 -67 V
9 231 V
10 308 V
9 138 V
10 320 V
9 10 V
9 -30 V
10 -650 V
9 -132 V
10 -127 V
9 -115 V
9 116 V
10 33 V
9 56 V
10 224 V
9 11 V
9 -64 V
10 -560 V
9 124 V
9 -144 V
10 253 V
9 208 V
10 1 V
9 296 V
9 -540 V
10 -263 V
9 152 V
10 -221 V
9 407 V
9 182 V
10 -22 V
9 -286 V
10 -89 V
9 182 V
9 112 V
10 471 V
9 -758 V
10 126 V
9 50 V
9 -56 V
10 -82 V
9 267 V
10 -196 V
9 -54 V
9 206 V
10 -242 V
9 119 V
10 255 V
9 -327 V
9 97 V
10 -171 V
9 -88 V
10 120 V
9 121 V
9 -441 V
10 423 V
9 -170 V
10 -153 V
9 7 V
9 104 V
10 239 V
9 -319 V
10 59 V
9 -36 V
9 -7 V
stroke 2167 743 M
10 227 V
9 -88 V
10 -70 V
9 214 V
9 -345 V
10 51 V
9 46 V
10 -99 V
9 193 V
9 -296 V
10 194 V
9 45 V
10 -202 V
9 33 V
9 83 V
10 -132 V
9 26 V
10 -12 V
9 107 V
9 -1 V
10 -56 V
9 -6 V
10 19 V
9 53 V
9 9 V
10 -25 V
9 54 V
10 -50 V
9 148 V
9 -87 V
10 -3 V
9 -215 V
10 173 V
9 179 V
9 -30 V
10 -114 V
9 84 V
10 84 V
9 -148 V
9 21 V
10 262 V
9 -135 V
10 -159 V
9 -2 V
9 162 V
10 3 V
9 110 V
10 -34 V
9 73 V
9 67 V
10 -96 V
9 175 V
10 -335 V
9 -21 V
9 -14 V
10 62 V
9 -107 V
10 19 V
9 -97 V
9 218 V
10 -68 V
9 -134 V
10 -141 V
9 85 V
9 249 V
10 -172 V
9 -87 V
10 372 V
9 -111 V
9 -163 V
10 -38 V
9 164 V
9 -146 V
10 -63 V
9 308 V
10 -38 V
9 89 V
9 -391 V
10 26 V
9 107 V
10 30 V
9 -100 V
9 -79 V
10 297 V
9 -94 V
10 -14 V
9 -50 V
9 -74 V
10 238 V
9 204 V
10 -351 V
9 -1 V
9 20 V
10 -12 V
9 -52 V
10 254 V
9 -121 V
9 -114 V
10 156 V
9 90 V
10 100 V
9 -291 V
9 10 V
10 94 V
stroke 3145 946 M
9 -16 V
10 -248 V
9 81 V
9 73 V
10 -80 V
9 -34 V
10 38 V
9 -46 V
9 -57 V
10 67 V
9 -19 V
10 77 V
9 -65 V
9 124 V
10 -145 V
9 117 V
10 62 V
9 -182 V
9 92 V
10 -107 V
9 -16 V
10 293 V
9 -102 V
9 -207 V
10 108 V
9 217 V
10 -171 V
9 135 V
9 -49 V
10 161 V
9 -178 V
10 -166 V
9 290 V
9 -61 V
10 -147 V
9 -135 V
10 64 V
9 29 V
9 85 V
10 -51 V
9 5 V
10 -50 V
9 155 V
9 29 V
10 -129 V
9 -43 V
10 158 V
9 230 V
9 -192 V
10 -184 V
9 25 V
10 92 V
9 53 V
9 -18 V
10 -85 V
9 -19 V
10 73 V
9 -96 V
9 203 V
10 47 V
9 -70 V
10 -58 V
9 84 V
9 -38 V
10 -198 V
9 -10 V
10 -54 V
9 77 V
9 147 V
10 -97 V
9 93 V
10 -105 V
9 41 V
9 19 V
10 -205 V
9 43 V
10 218 V
9 49 V
9 -3 V
10 -43 V
9 -136 V
10 122 V
9 -74 V
9 -122 V
10 100 V
9 57 V
9 -51 V
10 18 V
9 81 V
10 -36 V
9 27 V
9 33 V
10 -96 V
9 -116 V
10 192 V
9 -27 V
9 -174 V
10 162 V
9 61 V
10 11 V
9 -40 V
9 -26 V
10 -153 V
9 194 V
stroke 4122 928 M
10 -10 V
9 -32 V
9 -62 V
10 18 V
9 21 V
10 -60 V
9 -148 V
9 45 V
10 340 V
9 -290 V
10 154 V
9 -33 V
9 -14 V
10 -40 V
9 49 V
10 -19 V
9 171 V
9 -10 V
10 -53 V
9 7 V
10 -77 V
9 48 V
9 -79 V
10 -44 V
9 84 V
10 -18 V
9 102 V
9 -25 V
10 -18 V
9 -16 V
10 -68 V
9 -47 V
9 10 V
10 30 V
9 -89 V
10 -109 V
9 -142 V
1190 448 Crs
1199 996 Crs
1209 895 Crs
1218 908 Crs
1228 673 Crs
1237 770 Crs
1246 660 Crs
1256 670 Crs
1265 698 Crs
1275 618 Crs
1284 663 Crs
1293 611 Crs
1303 642 Crs
1312 659 Crs
1322 625 Crs
1331 672 Crs
1340 652 Crs
1350 649 Crs
1359 654 Crs
1369 684 Crs
1378 810 Crs
1387 807 Crs
1397 867 Crs
1406 793 Crs
1416 824 Crs
1425 1008 Crs
1434 1016 Crs
1444 1203 Crs
1453 916 Crs
1463 959 Crs
1472 1089 Crs
1481 1273 Crs
1491 1238 Crs
1500 1405 Crs
1510 932 Crs
1519 811 Crs
1528 1067 Crs
1538 974 Crs
1547 803 Crs
1557 1125 Crs
1566 1058 Crs
1575 1289 Crs
1585 1597 Crs
1594 1735 Crs
1604 2055 Crs
1613 2065 Crs
1622 2035 Crs
1632 1385 Crs
1641 1253 Crs
1651 1126 Crs
1660 1011 Crs
1669 1127 Crs
1679 1160 Crs
1688 1216 Crs
1698 1440 Crs
1707 1451 Crs
1716 1387 Crs
1726 827 Crs
1735 951 Crs
1744 807 Crs
1754 1060 Crs
1763 1268 Crs
1773 1269 Crs
1782 1565 Crs
1791 1025 Crs
1801 762 Crs
1810 914 Crs
1820 693 Crs
1829 1100 Crs
1838 1282 Crs
1848 1260 Crs
1857 974 Crs
1867 885 Crs
1876 1067 Crs
1885 1179 Crs
1895 1650 Crs
1904 892 Crs
1914 1018 Crs
1923 1068 Crs
1932 1012 Crs
1942 930 Crs
1951 1197 Crs
1961 1001 Crs
1970 947 Crs
1979 1153 Crs
1989 911 Crs
1998 1030 Crs
2008 1285 Crs
2017 958 Crs
2026 1055 Crs
2036 884 Crs
2045 796 Crs
2055 916 Crs
2064 1037 Crs
2073 596 Crs
2083 1019 Crs
2092 849 Crs
2102 696 Crs
2111 703 Crs
2120 807 Crs
2130 1046 Crs
2139 727 Crs
2149 786 Crs
2158 750 Crs
2167 743 Crs
2177 970 Crs
2186 882 Crs
2196 812 Crs
2205 1026 Crs
2214 681 Crs
2224 732 Crs
2233 778 Crs
2243 679 Crs
2252 872 Crs
2261 576 Crs
2271 770 Crs
2280 815 Crs
2290 613 Crs
2299 646 Crs
2308 729 Crs
2318 597 Crs
2327 623 Crs
2337 611 Crs
2346 718 Crs
2355 717 Crs
2365 661 Crs
2374 655 Crs
2384 674 Crs
2393 727 Crs
2402 736 Crs
2412 711 Crs
2421 765 Crs
2431 715 Crs
2440 863 Crs
2449 776 Crs
2459 773 Crs
2468 558 Crs
2478 731 Crs
2487 910 Crs
2496 880 Crs
2506 766 Crs
2515 850 Crs
2525 934 Crs
2534 786 Crs
2543 807 Crs
2553 1069 Crs
2562 934 Crs
2572 775 Crs
2581 773 Crs
2590 935 Crs
2600 938 Crs
2609 1048 Crs
2619 1014 Crs
2628 1087 Crs
2637 1154 Crs
2647 1058 Crs
2656 1233 Crs
2666 898 Crs
2675 877 Crs
2684 863 Crs
2694 925 Crs
2703 818 Crs
2713 837 Crs
2722 740 Crs
2731 958 Crs
2741 890 Crs
2750 756 Crs
2760 615 Crs
2769 700 Crs
2778 949 Crs
2788 777 Crs
2797 690 Crs
2807 1062 Crs
2816 951 Crs
2825 788 Crs
2835 750 Crs
2844 914 Crs
2853 768 Crs
2863 705 Crs
2872 1013 Crs
2882 975 Crs
2891 1064 Crs
2900 673 Crs
2910 699 Crs
2919 806 Crs
2929 836 Crs
2938 736 Crs
2947 657 Crs
2957 954 Crs
2966 860 Crs
2976 846 Crs
2985 796 Crs
2994 722 Crs
3004 960 Crs
3013 1164 Crs
3023 813 Crs
3032 812 Crs
3041 832 Crs
3051 820 Crs
3060 768 Crs
3070 1022 Crs
3079 901 Crs
3088 787 Crs
3098 943 Crs
3107 1033 Crs
3117 1133 Crs
3126 842 Crs
3135 852 Crs
3145 946 Crs
3154 930 Crs
3164 682 Crs
3173 763 Crs
3182 836 Crs
3192 756 Crs
3201 722 Crs
3211 760 Crs
3220 714 Crs
3229 657 Crs
3239 724 Crs
3248 705 Crs
3258 782 Crs
3267 717 Crs
3276 841 Crs
3286 696 Crs
3295 813 Crs
3305 875 Crs
3314 693 Crs
3323 785 Crs
3333 678 Crs
3342 662 Crs
3352 955 Crs
3361 853 Crs
3370 646 Crs
3380 754 Crs
3389 971 Crs
3399 800 Crs
3408 935 Crs
3417 886 Crs
3427 1047 Crs
3436 869 Crs
3446 703 Crs
3455 993 Crs
3464 932 Crs
3474 785 Crs
3483 650 Crs
3493 714 Crs
3502 743 Crs
3511 828 Crs
3521 777 Crs
3530 782 Crs
3540 732 Crs
3549 887 Crs
3558 916 Crs
3568 787 Crs
3577 744 Crs
3587 902 Crs
3596 1132 Crs
3605 940 Crs
3615 756 Crs
3624 781 Crs
3634 873 Crs
3643 926 Crs
3652 908 Crs
3662 823 Crs
3671 804 Crs
3681 877 Crs
3690 781 Crs
3699 984 Crs
3709 1031 Crs
3718 961 Crs
3728 903 Crs
3737 987 Crs
3746 949 Crs
3756 751 Crs
3765 741 Crs
3775 687 Crs
3784 764 Crs
3793 911 Crs
3803 814 Crs
3812 907 Crs
3822 802 Crs
3831 843 Crs
3840 862 Crs
3850 657 Crs
3859 700 Crs
3869 918 Crs
3878 967 Crs
3887 964 Crs
3897 921 Crs
3906 785 Crs
3916 907 Crs
3925 833 Crs
3934 711 Crs
3944 811 Crs
3953 868 Crs
3962 817 Crs
3972 835 Crs
3981 916 Crs
3991 880 Crs
4000 907 Crs
4009 940 Crs
4019 844 Crs
4028 728 Crs
4038 920 Crs
4047 893 Crs
4056 719 Crs
4066 881 Crs
4075 942 Crs
4085 953 Crs
4094 913 Crs
4103 887 Crs
4113 734 Crs
4122 928 Crs
4132 918 Crs
4141 886 Crs
4150 824 Crs
4160 842 Crs
4169 863 Crs
4179 803 Crs
4188 655 Crs
4197 700 Crs
4207 1040 Crs
4216 750 Crs
4226 904 Crs
4235 871 Crs
4244 857 Crs
4254 817 Crs
4263 866 Crs
4273 847 Crs
4282 1018 Crs
4291 1008 Crs
4301 955 Crs
4310 962 Crs
4320 885 Crs
4329 933 Crs
4338 854 Crs
4348 810 Crs
4357 894 Crs
4367 876 Crs
4376 978 Crs
4385 953 Crs
4395 935 Crs
4404 919 Crs
4414 851 Crs
4423 804 Crs
4432 814 Crs
4442 844 Crs
4451 755 Crs
4461 646 Crs
1.000 UL
LTb
1190 2100 N
0 -1652 V
3280 0 V
0 1652 V
-3280 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
