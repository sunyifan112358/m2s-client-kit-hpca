%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 03:35:44 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 03:35:44 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 723 M
3364 0 V
stroke
LTb
1106 723 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 50000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 999 M
3364 0 V
stroke
LTb
1106 999 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1274 M
3364 0 V
stroke
LTb
1106 1274 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 150000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1549 M
3364 0 V
stroke
LTb
1106 1549 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 200000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1825 M
3364 0 V
stroke
LTb
1106 1825 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 250000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 300000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1766 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2425 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
3085 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
3744 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
4404 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
13 1444 V
13 -313 V
14 -68 V
13 283 V
13 3 V
13 -581 V
13 -243 V
14 -40 V
13 56 V
13 1 V
13 -62 V
13 62 V
13 -8 V
14 13 V
13 -21 V
13 33 V
13 7 V
13 -8 V
14 -9 V
13 -14 V
13 -11 V
13 -11 V
13 27 V
14 -22 V
13 6 V
13 -28 V
13 13 V
13 -1 V
14 25 V
13 35 V
13 -45 V
13 13 V
13 -18 V
14 24 V
13 -9 V
13 -76 V
13 1 V
13 -10 V
13 56 V
14 -49 V
13 -34 V
13 -14 V
13 -15 V
13 -8 V
14 41 V
13 -16 V
13 25 V
13 6 V
13 2 V
14 40 V
13 -29 V
13 18 V
13 24 V
13 -27 V
14 69 V
13 -24 V
13 -1 V
13 -58 V
13 27 V
14 5 V
13 8 V
13 -57 V
13 -46 V
13 -24 V
13 -6 V
14 25 V
13 25 V
13 3 V
13 17 V
13 19 V
14 45 V
13 0 V
13 0 V
13 25 V
13 -22 V
14 -4 V
13 7 V
13 -38 V
13 18 V
13 -25 V
14 11 V
13 -25 V
13 -2 V
13 26 V
13 25 V
14 -1 V
13 1 V
13 -12 V
13 25 V
13 24 V
13 -15 V
14 16 V
13 -32 V
13 6 V
13 -9 V
13 -31 V
14 22 V
13 -16 V
13 7 V
13 6 V
13 -5 V
14 -11 V
13 4 V
13 22 V
stroke 2478 940 M
13 2 V
13 -15 V
14 -25 V
13 -1 V
13 12 V
13 -31 V
13 38 V
14 -12 V
13 19 V
13 -23 V
13 56 V
13 -28 V
13 24 V
14 -17 V
13 -6 V
13 18 V
13 22 V
13 -3 V
14 -23 V
13 -32 V
13 2 V
13 4 V
13 -3 V
14 18 V
13 -7 V
13 -21 V
13 77 V
13 -18 V
14 -32 V
13 -17 V
13 44 V
13 1 V
13 -9 V
14 -4 V
13 14 V
13 -17 V
13 -15 V
13 -8 V
13 15 V
14 21 V
13 -25 V
13 28 V
13 -10 V
13 4 V
14 24 V
13 -26 V
13 22 V
13 -13 V
13 -11 V
14 -6 V
13 1 V
13 26 V
13 -7 V
13 10 V
14 2 V
13 -15 V
13 -5 V
13 6 V
13 32 V
14 -4 V
13 -34 V
13 2 V
13 41 V
13 -38 V
13 4 V
14 3 V
13 -19 V
13 26 V
13 -16 V
13 20 V
14 1 V
13 -9 V
13 -3 V
13 -18 V
13 3 V
14 -19 V
13 17 V
13 8 V
13 -9 V
13 -7 V
14 38 V
13 -5 V
13 2 V
13 14 V
13 -30 V
14 -5 V
13 33 V
13 -21 V
13 -7 V
13 15 V
13 -36 V
14 10 V
13 8 V
13 -6 V
13 41 V
13 -32 V
14 17 V
13 -9 V
13 14 V
13 -12 V
13 -3 V
14 -3 V
13 11 V
13 -16 V
stroke 3850 964 M
13 -10 V
13 14 V
14 6 V
13 -29 V
13 32 V
13 -14 V
13 32 V
14 -31 V
13 23 V
13 22 V
13 -15 V
13 -15 V
13 0 V
14 -8 V
13 23 V
13 -6 V
13 11 V
13 -42 V
14 30 V
13 -26 V
13 16 V
13 -29 V
13 5 V
14 44 V
13 7 V
13 1 V
13 -11 V
13 -27 V
14 22 V
13 7 V
13 -12 V
13 20 V
13 -12 V
14 -8 V
13 -4 V
13 16 V
13 -1 V
13 -5 V
13 -35 V
14 5 V
13 16 V
13 -11 V
13 -33 V
13 30 V
14 -53 V
13 -21 V
13 -103 V
1106 448 Crs
1119 1892 Crs
1132 1579 Crs
1146 1511 Crs
1159 1794 Crs
1172 1797 Crs
1185 1216 Crs
1198 973 Crs
1212 933 Crs
1225 989 Crs
1238 990 Crs
1251 928 Crs
1264 990 Crs
1277 982 Crs
1291 995 Crs
1304 974 Crs
1317 1007 Crs
1330 1014 Crs
1343 1006 Crs
1357 997 Crs
1370 983 Crs
1383 972 Crs
1396 961 Crs
1409 988 Crs
1423 966 Crs
1436 972 Crs
1449 944 Crs
1462 957 Crs
1475 956 Crs
1489 981 Crs
1502 1016 Crs
1515 971 Crs
1528 984 Crs
1541 966 Crs
1555 990 Crs
1568 981 Crs
1581 905 Crs
1594 906 Crs
1607 896 Crs
1620 952 Crs
1634 903 Crs
1647 869 Crs
1660 855 Crs
1673 840 Crs
1686 832 Crs
1700 873 Crs
1713 857 Crs
1726 882 Crs
1739 888 Crs
1752 890 Crs
1766 930 Crs
1779 901 Crs
1792 919 Crs
1805 943 Crs
1818 916 Crs
1832 985 Crs
1845 961 Crs
1858 960 Crs
1871 902 Crs
1884 929 Crs
1898 934 Crs
1911 942 Crs
1924 885 Crs
1937 839 Crs
1950 815 Crs
1963 809 Crs
1977 834 Crs
1990 859 Crs
2003 862 Crs
2016 879 Crs
2029 898 Crs
2043 943 Crs
2056 943 Crs
2069 943 Crs
2082 968 Crs
2095 946 Crs
2109 942 Crs
2122 949 Crs
2135 911 Crs
2148 929 Crs
2161 904 Crs
2175 915 Crs
2188 890 Crs
2201 888 Crs
2214 914 Crs
2227 939 Crs
2241 938 Crs
2254 939 Crs
2267 927 Crs
2280 952 Crs
2293 976 Crs
2306 961 Crs
2320 977 Crs
2333 945 Crs
2346 951 Crs
2359 942 Crs
2372 911 Crs
2386 933 Crs
2399 917 Crs
2412 924 Crs
2425 930 Crs
2438 925 Crs
2452 914 Crs
2465 918 Crs
2478 940 Crs
2491 942 Crs
2504 927 Crs
2518 902 Crs
2531 901 Crs
2544 913 Crs
2557 882 Crs
2570 920 Crs
2584 908 Crs
2597 927 Crs
2610 904 Crs
2623 960 Crs
2636 932 Crs
2649 956 Crs
2663 939 Crs
2676 933 Crs
2689 951 Crs
2702 973 Crs
2715 970 Crs
2729 947 Crs
2742 915 Crs
2755 917 Crs
2768 921 Crs
2781 918 Crs
2795 936 Crs
2808 929 Crs
2821 908 Crs
2834 985 Crs
2847 967 Crs
2861 935 Crs
2874 918 Crs
2887 962 Crs
2900 963 Crs
2913 954 Crs
2927 950 Crs
2940 964 Crs
2953 947 Crs
2966 932 Crs
2979 924 Crs
2992 939 Crs
3006 960 Crs
3019 935 Crs
3032 963 Crs
3045 953 Crs
3058 957 Crs
3072 981 Crs
3085 955 Crs
3098 977 Crs
3111 964 Crs
3124 953 Crs
3138 947 Crs
3151 948 Crs
3164 974 Crs
3177 967 Crs
3190 977 Crs
3204 979 Crs
3217 964 Crs
3230 959 Crs
3243 965 Crs
3256 997 Crs
3270 993 Crs
3283 959 Crs
3296 961 Crs
3309 1002 Crs
3322 964 Crs
3335 968 Crs
3349 971 Crs
3362 952 Crs
3375 978 Crs
3388 962 Crs
3401 982 Crs
3415 983 Crs
3428 974 Crs
3441 971 Crs
3454 953 Crs
3467 956 Crs
3481 937 Crs
3494 954 Crs
3507 962 Crs
3520 953 Crs
3533 946 Crs
3547 984 Crs
3560 979 Crs
3573 981 Crs
3586 995 Crs
3599 965 Crs
3613 960 Crs
3626 993 Crs
3639 972 Crs
3652 965 Crs
3665 980 Crs
3678 944 Crs
3692 954 Crs
3705 962 Crs
3718 956 Crs
3731 997 Crs
3744 965 Crs
3758 982 Crs
3771 973 Crs
3784 987 Crs
3797 975 Crs
3810 972 Crs
3824 969 Crs
3837 980 Crs
3850 964 Crs
3863 954 Crs
3876 968 Crs
3890 974 Crs
3903 945 Crs
3916 977 Crs
3929 963 Crs
3942 995 Crs
3956 964 Crs
3969 987 Crs
3982 1009 Crs
3995 994 Crs
4008 979 Crs
4021 979 Crs
4035 971 Crs
4048 994 Crs
4061 988 Crs
4074 999 Crs
4087 957 Crs
4101 987 Crs
4114 961 Crs
4127 977 Crs
4140 948 Crs
4153 953 Crs
4167 997 Crs
4180 1004 Crs
4193 1005 Crs
4206 994 Crs
4219 967 Crs
4233 989 Crs
4246 996 Crs
4259 984 Crs
4272 1004 Crs
4285 992 Crs
4299 984 Crs
4312 980 Crs
4325 996 Crs
4338 995 Crs
4351 990 Crs
4364 955 Crs
4378 960 Crs
4391 976 Crs
4404 965 Crs
4417 932 Crs
4430 962 Crs
4444 909 Crs
4457 888 Crs
4470 785 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
