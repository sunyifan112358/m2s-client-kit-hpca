%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 17:28:24 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 17:28:24 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
3280 0 V
stroke
LTb
1190 448 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 684 M
3280 0 V
stroke
LTb
1190 684 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 500000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 920 M
3280 0 V
stroke
LTb
1190 920 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1156 M
3280 0 V
stroke
LTb
1190 1156 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 1.5e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1392 M
3280 0 V
stroke
LTb
1190 1392 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 2e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1628 M
3280 0 V
stroke
LTb
1190 1628 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 2.5e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1864 M
3280 0 V
stroke
LTb
1190 1864 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 3e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2100 M
3280 0 V
stroke
LTb
1190 2100 M
63 0 V
3217 0 R
-63 0 V
-3301 0 R
( 3.5e+06) Rshow
1.000 UL
LTb
1190 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1888 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2586 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
3284 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
3981 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1190 2100 N
0 -1652 V
3280 0 V
0 1652 V
-3280 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2830 98 M
(Time\(Cycle\)) Cshow
LTb
2830 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1190 448 M
14 202 V
14 -121 V
14 27 V
14 -1 V
14 -1 V
14 -4 V
14 1 V
14 2 V
14 9 V
14 23 V
14 292 V
13 -84 V
14 -78 V
14 -34 V
14 -6 V
14 -59 V
14 465 V
14 126 V
14 -225 V
14 283 V
14 -163 V
14 191 V
14 74 V
14 204 V
14 353 V
14 9 V
14 -19 V
14 -181 V
14 -833 V
14 89 V
14 120 V
14 285 V
14 -522 V
14 544 V
14 -396 V
13 -240 V
14 -12 V
14 83 V
14 48 V
14 -20 V
14 264 V
14 -271 V
14 39 V
14 -161 V
14 160 V
14 -186 V
14 104 V
14 31 V
14 -66 V
14 161 V
14 -111 V
14 -211 V
14 74 V
14 0 V
14 172 V
14 -124 V
14 -121 V
14 71 V
13 315 V
14 -121 V
14 -211 V
14 0 V
14 -13 V
14 110 V
14 -160 V
14 36 V
14 45 V
14 -116 V
14 166 V
14 -85 V
14 -36 V
14 -16 V
14 27 V
14 -56 V
14 -74 V
14 42 V
14 52 V
14 78 V
14 -58 V
14 -80 V
14 91 V
14 -26 V
13 -65 V
14 18 V
14 39 V
14 39 V
14 -27 V
14 142 V
14 -182 V
14 18 V
14 2 V
14 25 V
14 144 V
14 -78 V
14 111 V
14 -229 V
14 166 V
14 75 V
14 -170 V
14 85 V
14 180 V
14 -82 V
14 -81 V
14 208 V
stroke 2642 952 M
14 -230 V
13 43 V
14 152 V
14 -187 V
14 -88 V
14 151 V
14 19 V
14 276 V
14 -368 V
14 182 V
14 171 V
14 -348 V
14 364 V
14 148 V
14 18 V
14 -548 V
14 316 V
14 -161 V
14 -209 V
14 161 V
14 64 V
14 -124 V
14 4 V
14 145 V
14 -229 V
13 -23 V
14 403 V
14 143 V
14 -372 V
14 51 V
14 -194 V
14 124 V
14 88 V
14 208 V
14 -416 V
14 99 V
14 -130 V
14 -73 V
14 342 V
14 3 V
14 -166 V
14 66 V
14 -169 V
14 -71 V
14 123 V
14 86 V
14 -72 V
14 -1 V
13 -38 V
14 -5 V
14 61 V
14 -69 V
14 141 V
14 -194 V
14 43 V
14 104 V
14 32 V
14 -135 V
14 -31 V
14 83 V
14 52 V
14 27 V
14 -207 V
14 64 V
14 28 V
14 -64 V
14 -31 V
14 47 V
14 -40 V
14 33 V
14 29 V
14 96 V
13 -156 V
14 112 V
14 60 V
14 -60 V
14 52 V
14 -73 V
14 192 V
14 -253 V
14 64 V
14 -38 V
14 173 V
14 -60 V
14 -180 V
14 161 V
14 -6 V
14 -11 V
14 -68 V
14 91 V
14 4 V
14 217 V
14 -142 V
14 -252 V
14 101 V
13 -25 V
14 114 V
14 -44 V
14 172 V
14 142 V
14 38 V
14 -162 V
14 -196 V
14 485 V
stroke 4093 1201 M
14 -302 V
14 -114 V
14 55 V
14 218 V
14 -103 V
14 273 V
14 -46 V
14 -48 V
14 16 V
14 -245 V
14 191 V
14 92 V
14 -154 V
14 -23 V
14 80 V
13 -28 V
14 -73 V
14 -12 V
14 -78 V
14 80 V
14 -57 V
14 -54 V
14 -110 V
14 -78 V
14 -142 V
14 -73 V
14 -4 V
1190 448 Crs
1204 650 Crs
1218 529 Crs
1232 556 Crs
1246 555 Crs
1260 554 Crs
1274 550 Crs
1288 551 Crs
1302 553 Crs
1316 562 Crs
1330 585 Crs
1344 877 Crs
1357 793 Crs
1371 715 Crs
1385 681 Crs
1399 675 Crs
1413 616 Crs
1427 1081 Crs
1441 1207 Crs
1455 982 Crs
1469 1265 Crs
1483 1102 Crs
1497 1293 Crs
1511 1367 Crs
1525 1571 Crs
1539 1924 Crs
1553 1933 Crs
1567 1914 Crs
1581 1733 Crs
1595 900 Crs
1609 989 Crs
1623 1109 Crs
1637 1394 Crs
1651 872 Crs
1665 1416 Crs
1679 1020 Crs
1692 780 Crs
1706 768 Crs
1720 851 Crs
1734 899 Crs
1748 879 Crs
1762 1143 Crs
1776 872 Crs
1790 911 Crs
1804 750 Crs
1818 910 Crs
1832 724 Crs
1846 828 Crs
1860 859 Crs
1874 793 Crs
1888 954 Crs
1902 843 Crs
1916 632 Crs
1930 706 Crs
1944 706 Crs
1958 878 Crs
1972 754 Crs
1986 633 Crs
2000 704 Crs
2013 1019 Crs
2027 898 Crs
2041 687 Crs
2055 687 Crs
2069 674 Crs
2083 784 Crs
2097 624 Crs
2111 660 Crs
2125 705 Crs
2139 589 Crs
2153 755 Crs
2167 670 Crs
2181 634 Crs
2195 618 Crs
2209 645 Crs
2223 589 Crs
2237 515 Crs
2251 557 Crs
2265 609 Crs
2279 687 Crs
2293 629 Crs
2307 549 Crs
2321 640 Crs
2335 614 Crs
2348 549 Crs
2362 567 Crs
2376 606 Crs
2390 645 Crs
2404 618 Crs
2418 760 Crs
2432 578 Crs
2446 596 Crs
2460 598 Crs
2474 623 Crs
2488 767 Crs
2502 689 Crs
2516 800 Crs
2530 571 Crs
2544 737 Crs
2558 812 Crs
2572 642 Crs
2586 727 Crs
2600 907 Crs
2614 825 Crs
2628 744 Crs
2642 952 Crs
2656 722 Crs
2669 765 Crs
2683 917 Crs
2697 730 Crs
2711 642 Crs
2725 793 Crs
2739 812 Crs
2753 1088 Crs
2767 720 Crs
2781 902 Crs
2795 1073 Crs
2809 725 Crs
2823 1089 Crs
2837 1237 Crs
2851 1255 Crs
2865 707 Crs
2879 1023 Crs
2893 862 Crs
2907 653 Crs
2921 814 Crs
2935 878 Crs
2949 754 Crs
2963 758 Crs
2977 903 Crs
2991 674 Crs
3004 651 Crs
3018 1054 Crs
3032 1197 Crs
3046 825 Crs
3060 876 Crs
3074 682 Crs
3088 806 Crs
3102 894 Crs
3116 1102 Crs
3130 686 Crs
3144 785 Crs
3158 655 Crs
3172 582 Crs
3186 924 Crs
3200 927 Crs
3214 761 Crs
3228 827 Crs
3242 658 Crs
3256 587 Crs
3270 710 Crs
3284 796 Crs
3298 724 Crs
3312 723 Crs
3325 685 Crs
3339 680 Crs
3353 741 Crs
3367 672 Crs
3381 813 Crs
3395 619 Crs
3409 662 Crs
3423 766 Crs
3437 798 Crs
3451 663 Crs
3465 632 Crs
3479 715 Crs
3493 767 Crs
3507 794 Crs
3521 587 Crs
3535 651 Crs
3549 679 Crs
3563 615 Crs
3577 584 Crs
3591 631 Crs
3605 591 Crs
3619 624 Crs
3633 653 Crs
3647 749 Crs
3660 593 Crs
3674 705 Crs
3688 765 Crs
3702 705 Crs
3716 757 Crs
3730 684 Crs
3744 876 Crs
3758 623 Crs
3772 687 Crs
3786 649 Crs
3800 822 Crs
3814 762 Crs
3828 582 Crs
3842 743 Crs
3856 737 Crs
3870 726 Crs
3884 658 Crs
3898 749 Crs
3912 753 Crs
3926 970 Crs
3940 828 Crs
3954 576 Crs
3968 677 Crs
3981 652 Crs
3995 766 Crs
4009 722 Crs
4023 894 Crs
4037 1036 Crs
4051 1074 Crs
4065 912 Crs
4079 716 Crs
4093 1201 Crs
4107 899 Crs
4121 785 Crs
4135 840 Crs
4149 1058 Crs
4163 955 Crs
4177 1228 Crs
4191 1182 Crs
4205 1134 Crs
4219 1150 Crs
4233 905 Crs
4247 1096 Crs
4261 1188 Crs
4275 1034 Crs
4289 1011 Crs
4303 1091 Crs
4316 1063 Crs
4330 990 Crs
4344 978 Crs
4358 900 Crs
4372 980 Crs
4386 923 Crs
4400 869 Crs
4414 759 Crs
4428 681 Crs
4442 539 Crs
4456 466 Crs
1.000 UL
LTb
1190 2100 N
0 -1652 V
3280 0 V
0 1652 V
-3280 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
