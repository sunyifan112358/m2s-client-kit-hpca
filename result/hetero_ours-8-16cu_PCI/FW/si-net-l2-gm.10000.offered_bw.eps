%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 07:53:10 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 07:53:10 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 613 M
3364 0 V
stroke
LTb
1106 613 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 778 M
3364 0 V
stroke
LTb
1106 778 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 944 M
3364 0 V
stroke
LTb
1106 944 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 60000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1109 M
3364 0 V
stroke
LTb
1106 1109 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 80000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1274 M
3364 0 V
stroke
LTb
1106 1274 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1439 M
3364 0 V
stroke
LTb
1106 1439 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 120000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1604 M
3364 0 V
stroke
LTb
1106 1604 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 140000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1770 M
3364 0 V
stroke
LTb
1106 1770 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 160000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1935 M
3364 0 V
stroke
LTb
1106 1935 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 180000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 200000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1497 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
1888 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2279 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
2671 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
3062 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
3453 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3e+06) Cshow
1.000 UL
LTb
3844 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3.5e+06) Cshow
1.000 UL
LTb
4235 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 4e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
8 243 V
8 158 V
7 -245 V
8 74 V
8 226 V
8 113 V
8 -300 V
8 22 V
7 147 V
8 391 V
8 -22 V
8 231 V
8 143 V
8 -310 V
7 397 V
8 -362 V
8 180 V
8 139 V
8 -637 V
7 854 V
8 -866 V
8 887 V
8 -712 V
8 367 V
8 -31 V
7 -533 V
8 1096 V
8 -950 V
8 706 V
8 -508 V
8 234 V
7 43 V
8 -516 V
8 796 V
8 -960 V
8 1066 V
7 -742 V
8 312 V
8 1 V
8 -626 V
8 874 V
8 -925 V
7 896 V
8 -827 V
8 681 V
8 -452 V
8 260 V
8 -109 V
7 -201 V
8 469 V
8 -551 V
8 696 V
8 -996 V
7 1158 V
8 -955 V
8 786 V
8 -626 V
8 316 V
8 -108 V
7 -135 V
8 407 V
8 -680 V
8 980 V
8 -863 V
8 688 V
7 -494 V
8 37 V
8 333 V
8 -798 V
8 1039 V
7 -924 V
8 993 V
8 -929 V
8 651 V
8 -468 V
8 176 V
7 205 V
8 -613 V
8 840 V
8 -975 V
8 1171 V
8 -1116 V
7 814 V
8 -225 V
8 -280 V
8 462 V
8 -755 V
7 956 V
8 -587 V
8 78 V
8 130 V
8 -407 V
8 687 V
7 -894 V
8 1009 V
8 -882 V
8 624 V
8 -89 V
8 -530 V
7 747 V
8 -477 V
8 104 V
8 377 V
8 -832 V
stroke 1920 895 M
7 964 V
8 -772 V
8 579 V
8 -369 V
8 -172 V
8 664 V
7 -604 V
8 123 V
8 144 V
8 -241 V
8 435 V
7 -534 V
8 540 V
8 -83 V
8 -505 V
8 717 V
8 -380 V
7 50 V
8 106 V
8 -569 V
8 758 V
8 -650 V
8 317 V
7 -121 V
8 261 V
8 -154 V
8 -311 V
8 607 V
7 -937 V
8 1080 V
8 -720 V
8 217 V
8 303 V
8 -536 V
7 729 V
8 -503 V
8 -117 V
8 433 V
8 -513 V
8 183 V
7 494 V
8 -551 V
8 270 V
8 -90 V
8 -361 V
7 726 V
8 -581 V
8 348 V
8 -194 V
8 -117 V
8 365 V
7 -571 V
8 740 V
8 -397 V
8 -163 V
8 455 V
8 -524 V
7 322 V
8 267 V
8 -871 V
8 967 V
8 -761 V
7 610 V
8 -483 V
8 146 V
8 417 V
8 -898 V
8 901 V
7 -480 V
8 -62 V
8 644 V
8 -970 V
8 776 V
8 -237 V
7 -419 V
8 740 V
8 -302 V
8 -398 V
8 878 V
7 -825 V
8 487 V
8 -417 V
8 -25 V
8 614 V
8 -593 V
7 200 V
8 336 V
8 -829 V
8 891 V
8 -887 V
8 919 V
7 -562 V
8 -5 V
8 289 V
8 -645 V
8 881 V
7 -306 V
8 -386 V
8 587 V
8 -440 V
8 38 V
8 327 V
7 -531 V
8 675 V
stroke 2733 1743 M
8 -486 V
8 -81 V
8 510 V
8 -654 V
7 520 V
8 106 V
8 -466 V
8 321 V
8 28 V
7 -512 V
8 788 V
8 -893 V
8 844 V
8 -256 V
8 -479 V
7 594 V
8 -7 V
8 -351 V
8 150 V
8 483 V
8 -838 V
7 806 V
8 -485 V
8 -35 V
8 606 V
8 -800 V
7 532 V
8 -222 V
8 -284 V
8 639 V
8 -623 V
8 212 V
7 297 V
8 -489 V
8 621 V
8 -371 V
8 -163 V
8 349 V
7 -688 V
8 838 V
8 -633 V
8 295 V
8 125 V
7 -590 V
8 855 V
8 -860 V
8 781 V
8 -427 V
8 55 V
7 349 V
8 -765 V
8 853 V
8 -386 V
8 -216 V
8 479 V
7 -612 V
8 778 V
8 -578 V
8 54 V
8 105 V
7 -361 V
8 743 V
8 -479 V
8 -67 V
8 499 V
8 -792 V
7 870 V
8 -571 V
8 -217 V
8 918 V
8 -923 V
8 783 V
7 -779 V
8 391 V
8 80 V
8 -690 V
8 1065 V
7 -478 V
8 -318 V
8 580 V
8 -538 V
8 242 V
8 -141 V
7 -62 V
8 643 V
8 -728 V
8 279 V
8 386 V
8 -916 V
7 1067 V
8 -713 V
8 -48 V
8 730 V
8 -671 V
7 219 V
8 205 V
8 -706 V
8 873 V
8 -557 V
8 -65 V
7 744 V
8 -1161 V
8 935 V
8 -413 V
stroke 3547 1324 M
8 -93 V
8 557 V
7 -520 V
8 96 V
8 92 V
8 -388 V
8 759 V
7 -607 V
8 -72 V
8 715 V
8 -813 V
8 500 V
8 -15 V
7 -606 V
8 878 V
8 -318 V
8 -377 V
8 712 V
7 -320 V
8 -473 V
8 855 V
8 -815 V
8 380 V
8 265 V
7 -472 V
8 48 V
8 388 V
8 -741 V
8 852 V
8 -486 V
7 12 V
8 335 V
8 -650 V
8 1006 V
8 -807 V
7 406 V
8 15 V
8 -525 V
8 398 V
8 1 V
8 -366 V
7 637 V
8 -163 V
8 -425 V
8 478 V
8 -70 V
8 -445 V
7 488 V
8 -113 V
8 -288 V
8 468 V
8 -405 V
7 -95 V
8 625 V
8 -359 V
8 -317 V
8 775 V
8 -624 V
7 -212 V
8 827 V
8 -384 V
8 -353 V
8 627 V
8 -412 V
7 -158 V
8 592 V
8 -657 V
8 165 V
8 532 V
7 -910 V
8 873 V
8 -344 V
8 -388 V
8 770 V
8 -468 V
7 -299 V
8 769 V
8 -414 V
8 -393 V
8 795 V
8 -435 V
7 -377 V
8 787 V
8 -288 V
8 -425 V
8 593 V
7 -249 V
8 -335 V
8 597 V
8 -487 V
8 252 V
8 112 V
7 -448 V
8 337 V
8 224 V
8 -961 V
8 1038 V
8 -371 V
7 -297 V
8 633 V
8 -472 V
8 -226 V
8 792 V
7 -415 V
stroke 4360 1434 M
8 -391 V
8 712 V
8 -161 V
8 -317 V
8 258 V
7 35 V
8 -486 V
8 649 V
8 -171 V
8 -553 V
8 713 V
7 -264 V
8 -369 V
8 823 V
1106 448 Crs
1114 691 Crs
1122 849 Crs
1129 604 Crs
1137 678 Crs
1145 904 Crs
1153 1017 Crs
1161 717 Crs
1169 739 Crs
1176 886 Crs
1184 1277 Crs
1192 1255 Crs
1200 1486 Crs
1208 1629 Crs
1216 1319 Crs
1223 1716 Crs
1231 1354 Crs
1239 1534 Crs
1247 1673 Crs
1255 1036 Crs
1262 1890 Crs
1270 1024 Crs
1278 1911 Crs
1286 1199 Crs
1294 1566 Crs
1302 1535 Crs
1309 1002 Crs
1317 2098 Crs
1325 1148 Crs
1333 1854 Crs
1341 1346 Crs
1349 1580 Crs
1356 1623 Crs
1364 1107 Crs
1372 1903 Crs
1380 943 Crs
1388 2009 Crs
1395 1267 Crs
1403 1579 Crs
1411 1580 Crs
1419 954 Crs
1427 1828 Crs
1435 903 Crs
1442 1799 Crs
1450 972 Crs
1458 1653 Crs
1466 1201 Crs
1474 1461 Crs
1482 1352 Crs
1489 1151 Crs
1497 1620 Crs
1505 1069 Crs
1513 1765 Crs
1521 769 Crs
1528 1927 Crs
1536 972 Crs
1544 1758 Crs
1552 1132 Crs
1560 1448 Crs
1568 1340 Crs
1575 1205 Crs
1583 1612 Crs
1591 932 Crs
1599 1912 Crs
1607 1049 Crs
1615 1737 Crs
1622 1243 Crs
1630 1280 Crs
1638 1613 Crs
1646 815 Crs
1654 1854 Crs
1661 930 Crs
1669 1923 Crs
1677 994 Crs
1685 1645 Crs
1693 1177 Crs
1701 1353 Crs
1708 1558 Crs
1716 945 Crs
1724 1785 Crs
1732 810 Crs
1740 1981 Crs
1748 865 Crs
1755 1679 Crs
1763 1454 Crs
1771 1174 Crs
1779 1636 Crs
1787 881 Crs
1794 1837 Crs
1802 1250 Crs
1810 1328 Crs
1818 1458 Crs
1826 1051 Crs
1834 1738 Crs
1841 844 Crs
1849 1853 Crs
1857 971 Crs
1865 1595 Crs
1873 1506 Crs
1881 976 Crs
1888 1723 Crs
1896 1246 Crs
1904 1350 Crs
1912 1727 Crs
1920 895 Crs
1927 1859 Crs
1935 1087 Crs
1943 1666 Crs
1951 1297 Crs
1959 1125 Crs
1967 1789 Crs
1974 1185 Crs
1982 1308 Crs
1990 1452 Crs
1998 1211 Crs
2006 1646 Crs
2013 1112 Crs
2021 1652 Crs
2029 1569 Crs
2037 1064 Crs
2045 1781 Crs
2053 1401 Crs
2060 1451 Crs
2068 1557 Crs
2076 988 Crs
2084 1746 Crs
2092 1096 Crs
2100 1413 Crs
2107 1292 Crs
2115 1553 Crs
2123 1399 Crs
2131 1088 Crs
2139 1695 Crs
2146 758 Crs
2154 1838 Crs
2162 1118 Crs
2170 1335 Crs
2178 1638 Crs
2186 1102 Crs
2193 1831 Crs
2201 1328 Crs
2209 1211 Crs
2217 1644 Crs
2225 1131 Crs
2233 1314 Crs
2240 1808 Crs
2248 1257 Crs
2256 1527 Crs
2264 1437 Crs
2272 1076 Crs
2279 1802 Crs
2287 1221 Crs
2295 1569 Crs
2303 1375 Crs
2311 1258 Crs
2319 1623 Crs
2326 1052 Crs
2334 1792 Crs
2342 1395 Crs
2350 1232 Crs
2358 1687 Crs
2366 1163 Crs
2373 1485 Crs
2381 1752 Crs
2389 881 Crs
2397 1848 Crs
2405 1087 Crs
2412 1697 Crs
2420 1214 Crs
2428 1360 Crs
2436 1777 Crs
2444 879 Crs
2452 1780 Crs
2459 1300 Crs
2467 1238 Crs
2475 1882 Crs
2483 912 Crs
2491 1688 Crs
2499 1451 Crs
2506 1032 Crs
2514 1772 Crs
2522 1470 Crs
2530 1072 Crs
2538 1950 Crs
2545 1125 Crs
2553 1612 Crs
2561 1195 Crs
2569 1170 Crs
2577 1784 Crs
2585 1191 Crs
2592 1391 Crs
2600 1727 Crs
2608 898 Crs
2616 1789 Crs
2624 902 Crs
2632 1821 Crs
2639 1259 Crs
2647 1254 Crs
2655 1543 Crs
2663 898 Crs
2671 1779 Crs
2678 1473 Crs
2686 1087 Crs
2694 1674 Crs
2702 1234 Crs
2710 1272 Crs
2718 1599 Crs
2725 1068 Crs
2733 1743 Crs
2741 1257 Crs
2749 1176 Crs
2757 1686 Crs
2765 1032 Crs
2772 1552 Crs
2780 1658 Crs
2788 1192 Crs
2796 1513 Crs
2804 1541 Crs
2811 1029 Crs
2819 1817 Crs
2827 924 Crs
2835 1768 Crs
2843 1512 Crs
2851 1033 Crs
2858 1627 Crs
2866 1620 Crs
2874 1269 Crs
2882 1419 Crs
2890 1902 Crs
2898 1064 Crs
2905 1870 Crs
2913 1385 Crs
2921 1350 Crs
2929 1956 Crs
2937 1156 Crs
2944 1688 Crs
2952 1466 Crs
2960 1182 Crs
2968 1821 Crs
2976 1198 Crs
2984 1410 Crs
2991 1707 Crs
2999 1218 Crs
3007 1839 Crs
3015 1468 Crs
3023 1305 Crs
3031 1654 Crs
3038 966 Crs
3046 1804 Crs
3054 1171 Crs
3062 1466 Crs
3070 1591 Crs
3077 1001 Crs
3085 1856 Crs
3093 996 Crs
3101 1777 Crs
3109 1350 Crs
3117 1405 Crs
3124 1754 Crs
3132 989 Crs
3140 1842 Crs
3148 1456 Crs
3156 1240 Crs
3164 1719 Crs
3171 1107 Crs
3179 1885 Crs
3187 1307 Crs
3195 1361 Crs
3203 1466 Crs
3210 1105 Crs
3218 1848 Crs
3226 1369 Crs
3234 1302 Crs
3242 1801 Crs
3250 1009 Crs
3257 1879 Crs
3265 1308 Crs
3273 1091 Crs
3281 2009 Crs
3289 1086 Crs
3297 1869 Crs
3304 1090 Crs
3312 1481 Crs
3320 1561 Crs
3328 871 Crs
3336 1936 Crs
3343 1458 Crs
3351 1140 Crs
3359 1720 Crs
3367 1182 Crs
3375 1424 Crs
3383 1283 Crs
3390 1221 Crs
3398 1864 Crs
3406 1136 Crs
3414 1415 Crs
3422 1801 Crs
3430 885 Crs
3437 1952 Crs
3445 1239 Crs
3453 1191 Crs
3461 1921 Crs
3469 1250 Crs
3476 1469 Crs
3484 1674 Crs
3492 968 Crs
3500 1841 Crs
3508 1284 Crs
3516 1219 Crs
3523 1963 Crs
3531 802 Crs
3539 1737 Crs
3547 1324 Crs
3555 1231 Crs
3563 1788 Crs
3570 1268 Crs
3578 1364 Crs
3586 1456 Crs
3594 1068 Crs
3602 1827 Crs
3609 1220 Crs
3617 1148 Crs
3625 1863 Crs
3633 1050 Crs
3641 1550 Crs
3649 1535 Crs
3656 929 Crs
3664 1807 Crs
3672 1489 Crs
3680 1112 Crs
3688 1824 Crs
3695 1504 Crs
3703 1031 Crs
3711 1886 Crs
3719 1071 Crs
3727 1451 Crs
3735 1716 Crs
3742 1244 Crs
3750 1292 Crs
3758 1680 Crs
3766 939 Crs
3774 1791 Crs
3782 1305 Crs
3789 1317 Crs
3797 1652 Crs
3805 1002 Crs
3813 2008 Crs
3821 1201 Crs
3828 1607 Crs
3836 1622 Crs
3844 1097 Crs
3852 1495 Crs
3860 1496 Crs
3868 1130 Crs
3875 1767 Crs
3883 1604 Crs
3891 1179 Crs
3899 1657 Crs
3907 1587 Crs
3915 1142 Crs
3922 1630 Crs
3930 1517 Crs
3938 1229 Crs
3946 1697 Crs
3954 1292 Crs
3961 1197 Crs
3969 1822 Crs
3977 1463 Crs
3985 1146 Crs
3993 1921 Crs
4001 1297 Crs
4008 1085 Crs
4016 1912 Crs
4024 1528 Crs
4032 1175 Crs
4040 1802 Crs
4048 1390 Crs
4055 1232 Crs
4063 1824 Crs
4071 1167 Crs
4079 1332 Crs
4087 1864 Crs
4094 954 Crs
4102 1827 Crs
4110 1483 Crs
4118 1095 Crs
4126 1865 Crs
4134 1397 Crs
4141 1098 Crs
4149 1867 Crs
4157 1453 Crs
4165 1060 Crs
4173 1855 Crs
4181 1420 Crs
4188 1043 Crs
4196 1830 Crs
4204 1542 Crs
4212 1117 Crs
4220 1710 Crs
4227 1461 Crs
4235 1126 Crs
4243 1723 Crs
4251 1236 Crs
4259 1488 Crs
4267 1600 Crs
4274 1152 Crs
4282 1489 Crs
4290 1713 Crs
4298 752 Crs
4306 1790 Crs
4314 1419 Crs
4321 1122 Crs
4329 1755 Crs
4337 1283 Crs
4345 1057 Crs
4353 1849 Crs
4360 1434 Crs
4368 1043 Crs
4376 1755 Crs
4384 1594 Crs
4392 1277 Crs
4400 1535 Crs
4407 1570 Crs
4415 1084 Crs
4423 1733 Crs
4431 1562 Crs
4439 1009 Crs
4447 1722 Crs
4454 1458 Crs
4462 1089 Crs
4470 1912 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
