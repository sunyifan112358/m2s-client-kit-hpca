%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 07:53:10 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 07:53:10 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 613 M
3364 0 V
stroke
LTb
1106 613 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 778 M
3364 0 V
stroke
LTb
1106 778 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 944 M
3364 0 V
stroke
LTb
1106 944 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 60000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1109 M
3364 0 V
stroke
LTb
1106 1109 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 80000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1274 M
3364 0 V
stroke
LTb
1106 1274 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1439 M
3364 0 V
stroke
LTb
1106 1439 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 120000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1604 M
3364 0 V
stroke
LTb
1106 1604 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 140000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1770 M
3364 0 V
stroke
LTb
1106 1770 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 160000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1935 M
3364 0 V
stroke
LTb
1106 1935 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 180000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 200000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1497 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
1888 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2279 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
2671 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
3062 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
3453 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3e+06) Cshow
1.000 UL
LTb
3844 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 3.5e+06) Cshow
1.000 UL
LTb
4235 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 4e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
8 244 V
8 115 V
7 -158 V
8 31 V
8 216 V
8 133 V
8 -313 V
8 30 V
7 141 V
8 382 V
8 -16 V
8 139 V
8 159 V
8 -373 V
7 450 V
8 -428 V
8 236 V
8 94 V
8 -595 V
7 830 V
8 -884 V
8 900 V
8 -786 V
8 469 V
8 -68 V
7 -465 V
8 1035 V
8 -1048 V
8 873 V
8 -666 V
8 339 V
7 0 V
8 -498 V
8 811 V
8 -984 V
8 1112 V
7 -846 V
8 416 V
8 -48 V
8 -594 V
8 873 V
8 -967 V
7 924 V
8 -880 V
8 788 V
8 -515 V
8 319 V
8 -161 V
7 -188 V
8 462 V
8 -590 V
8 750 V
8 -984 V
7 1149 V
8 -1034 V
8 892 V
8 -714 V
8 383 V
8 -160 V
7 -117 V
8 411 V
8 -647 V
8 960 V
8 -940 V
8 784 V
7 -567 V
8 130 V
8 330 V
8 -834 V
8 1077 V
7 -1053 V
8 1118 V
8 -995 V
8 757 V
8 -532 V
8 233 V
7 194 V
8 -626 V
8 850 V
8 -1003 V
8 1188 V
8 -1138 V
7 816 V
8 -218 V
8 -326 V
8 516 V
8 -768 V
7 996 V
8 -652 V
8 131 V
8 103 V
8 -409 V
8 695 V
7 -890 V
8 1035 V
8 -978 V
8 712 V
8 -132 V
8 -518 V
7 738 V
8 -559 V
8 222 V
8 322 V
8 -829 V
stroke 1920 767 M
7 987 V
8 -896 V
8 671 V
8 -365 V
8 -132 V
8 644 V
7 -695 V
8 244 V
8 105 V
8 -323 V
8 535 V
7 -624 V
8 634 V
8 -86 V
8 -505 V
8 670 V
8 -363 V
7 -94 V
8 286 V
8 -544 V
8 759 V
8 -707 V
8 395 V
7 -160 V
8 190 V
8 -93 V
8 -292 V
8 615 V
7 -960 V
8 1063 V
8 -740 V
8 285 V
8 278 V
8 -551 V
7 751 V
8 -532 V
8 -117 V
8 442 V
8 -537 V
8 260 V
7 461 V
8 -605 V
8 242 V
8 -27 V
8 -316 V
7 667 V
8 -687 V
8 433 V
8 -204 V
8 -104 V
8 363 V
7 -517 V
8 682 V
8 -429 V
8 -124 V
8 456 V
8 -604 V
7 458 V
8 219 V
8 -907 V
8 993 V
8 -910 V
8 809 V
7 -560 V
8 228 V
8 369 V
8 -953 V
8 898 V
7 -461 V
8 8 V
8 613 V
8 -945 V
8 737 V
8 -193 V
7 -393 V
8 700 V
8 -294 V
8 -356 V
8 851 V
7 -888 V
8 457 V
8 -322 V
8 16 V
8 572 V
8 -715 V
7 341 V
8 315 V
8 -913 V
8 951 V
8 -955 V
8 969 V
7 -553 V
8 26 V
8 300 V
8 -645 V
8 875 V
7 -310 V
8 -436 V
8 588 V
8 -489 V
8 136 V
8 302 V
7 -592 V
8 653 V
stroke 2733 1546 M
8 -442 V
8 -10 V
8 476 V
8 -778 V
7 678 V
8 73 V
8 -539 V
8 421 V
8 -8 V
7 -510 V
8 784 V
8 -973 V
8 910 V
8 -233 V
8 -479 V
7 571 V
8 1 V
8 -383 V
8 247 V
8 342 V
8 -865 V
7 900 V
8 -529 V
8 34 V
8 586 V
8 -920 V
7 675 V
8 -271 V
8 -206 V
8 608 V
8 -717 V
8 338 V
7 255 V
8 -558 V
8 752 V
8 -482 V
8 -270 V
8 496 V
7 -673 V
8 827 V
8 -695 V
8 411 V
8 78 V
8 -580 V
7 827 V
8 -856 V
8 762 V
8 -431 V
8 138 V
7 273 V
8 -745 V
8 801 V
8 -382 V
8 -202 V
8 506 V
7 -681 V
8 845 V
8 -635 V
8 166 V
8 68 V
7 -321 V
8 639 V
8 -499 V
8 52 V
8 473 V
8 -805 V
7 870 V
8 -675 V
8 -39 V
8 790 V
8 -1034 V
8 934 V
7 -799 V
8 473 V
8 59 V
8 -650 V
8 981 V
7 -461 V
8 -261 V
8 511 V
8 -572 V
8 366 V
8 -228 V
7 -20 V
8 655 V
8 -812 V
8 367 V
8 370 V
8 -1015 V
7 1157 V
8 -737 V
8 21 V
8 658 V
8 -774 V
7 405 V
8 126 V
8 -761 V
8 975 V
8 -600 V
8 -17 V
7 698 V
8 -1115 V
8 866 V
8 -424 V
stroke 3547 1169 M
8 -7 V
8 512 V
7 -581 V
8 162 V
8 116 V
8 -441 V
8 784 V
7 -692 V
8 68 V
8 672 V
8 -904 V
8 591 V
8 -16 V
7 -581 V
8 855 V
8 -367 V
8 -316 V
8 697 V
7 -365 V
8 -421 V
8 792 V
8 -790 V
8 431 V
8 254 V
7 -528 V
8 103 V
8 356 V
8 -785 V
8 888 V
8 -504 V
7 -92 V
8 463 V
8 -622 V
8 936 V
8 -993 V
8 678 V
7 -17 V
8 -608 V
8 527 V
8 -39 V
8 -337 V
7 587 V
8 -184 V
8 -433 V
8 561 V
8 -112 V
8 -464 V
7 579 V
8 -184 V
8 -317 V
8 534 V
8 -416 V
7 -43 V
8 567 V
8 -436 V
8 -211 V
8 627 V
8 -530 V
7 -134 V
8 777 V
8 -464 V
8 -361 V
8 686 V
8 -458 V
7 -158 V
8 668 V
8 -716 V
8 268 V
8 448 V
7 -1104 V
8 1101 V
8 -344 V
8 -377 V
8 653 V
8 -454 V
7 -172 V
8 754 V
8 -471 V
8 -377 V
8 811 V
8 -489 V
7 -310 V
8 744 V
8 -269 V
8 -398 V
8 578 V
7 -276 V
8 -415 V
8 717 V
8 -575 V
8 347 V
8 115 V
7 -472 V
8 389 V
8 156 V
8 -976 V
8 1021 V
8 -337 V
7 -231 V
8 491 V
8 -430 V
8 -153 V
8 744 V
7 -413 V
stroke 4360 1307 M
8 -320 V
8 637 V
8 -152 V
8 -375 V
8 288 V
7 76 V
8 -540 V
8 663 V
8 -153 V
8 -601 V
8 776 V
7 -330 V
8 -282 V
8 664 V
1106 448 Crs
1114 692 Crs
1122 807 Crs
1129 649 Crs
1137 680 Crs
1145 896 Crs
1153 1029 Crs
1161 716 Crs
1169 746 Crs
1176 887 Crs
1184 1269 Crs
1192 1253 Crs
1200 1392 Crs
1208 1551 Crs
1216 1178 Crs
1223 1628 Crs
1231 1200 Crs
1239 1436 Crs
1247 1530 Crs
1255 935 Crs
1262 1765 Crs
1270 881 Crs
1278 1781 Crs
1286 995 Crs
1294 1464 Crs
1302 1396 Crs
1309 931 Crs
1317 1966 Crs
1325 918 Crs
1333 1791 Crs
1341 1125 Crs
1349 1464 Crs
1356 1464 Crs
1364 966 Crs
1372 1777 Crs
1380 793 Crs
1388 1905 Crs
1395 1059 Crs
1403 1475 Crs
1411 1427 Crs
1419 833 Crs
1427 1706 Crs
1435 739 Crs
1442 1663 Crs
1450 783 Crs
1458 1571 Crs
1466 1056 Crs
1474 1375 Crs
1482 1214 Crs
1489 1026 Crs
1497 1488 Crs
1505 898 Crs
1513 1648 Crs
1521 664 Crs
1528 1813 Crs
1536 779 Crs
1544 1671 Crs
1552 957 Crs
1560 1340 Crs
1568 1180 Crs
1575 1063 Crs
1583 1474 Crs
1591 827 Crs
1599 1787 Crs
1607 847 Crs
1615 1631 Crs
1622 1064 Crs
1630 1194 Crs
1638 1524 Crs
1646 690 Crs
1654 1767 Crs
1661 714 Crs
1669 1832 Crs
1677 837 Crs
1685 1594 Crs
1693 1062 Crs
1701 1295 Crs
1708 1489 Crs
1716 863 Crs
1724 1713 Crs
1732 710 Crs
1740 1898 Crs
1748 760 Crs
1755 1576 Crs
1763 1358 Crs
1771 1032 Crs
1779 1548 Crs
1787 780 Crs
1794 1776 Crs
1802 1124 Crs
1810 1255 Crs
1818 1358 Crs
1826 949 Crs
1834 1644 Crs
1841 754 Crs
1849 1789 Crs
1857 811 Crs
1865 1523 Crs
1873 1391 Crs
1881 873 Crs
1888 1611 Crs
1896 1052 Crs
1904 1274 Crs
1912 1596 Crs
1920 767 Crs
1927 1754 Crs
1935 858 Crs
1943 1529 Crs
1951 1164 Crs
1959 1032 Crs
1967 1676 Crs
1974 981 Crs
1982 1225 Crs
1990 1330 Crs
1998 1007 Crs
2006 1542 Crs
2013 918 Crs
2021 1552 Crs
2029 1466 Crs
2037 961 Crs
2045 1631 Crs
2053 1268 Crs
2060 1174 Crs
2068 1460 Crs
2076 916 Crs
2084 1675 Crs
2092 968 Crs
2100 1363 Crs
2107 1203 Crs
2115 1393 Crs
2123 1300 Crs
2131 1008 Crs
2139 1623 Crs
2146 663 Crs
2154 1726 Crs
2162 986 Crs
2170 1271 Crs
2178 1549 Crs
2186 998 Crs
2193 1749 Crs
2201 1217 Crs
2209 1100 Crs
2217 1542 Crs
2225 1005 Crs
2233 1265 Crs
2240 1726 Crs
2248 1121 Crs
2256 1363 Crs
2264 1336 Crs
2272 1020 Crs
2279 1687 Crs
2287 1000 Crs
2295 1433 Crs
2303 1229 Crs
2311 1125 Crs
2319 1488 Crs
2326 971 Crs
2334 1653 Crs
2342 1224 Crs
2350 1100 Crs
2358 1556 Crs
2366 952 Crs
2373 1410 Crs
2381 1629 Crs
2389 722 Crs
2397 1715 Crs
2405 805 Crs
2413 1614 Crs
2420 1054 Crs
2428 1282 Crs
2436 1651 Crs
2444 698 Crs
2452 1596 Crs
2459 1135 Crs
2467 1143 Crs
2475 1756 Crs
2483 811 Crs
2491 1548 Crs
2499 1355 Crs
2506 962 Crs
2514 1662 Crs
2522 1368 Crs
2530 1012 Crs
2538 1863 Crs
2545 975 Crs
2553 1432 Crs
2561 1110 Crs
2569 1126 Crs
2577 1698 Crs
2585 983 Crs
2592 1324 Crs
2600 1639 Crs
2608 726 Crs
2616 1677 Crs
2624 722 Crs
2632 1691 Crs
2639 1138 Crs
2647 1164 Crs
2655 1464 Crs
2663 819 Crs
2671 1694 Crs
2678 1384 Crs
2686 948 Crs
2694 1536 Crs
2702 1047 Crs
2710 1183 Crs
2718 1485 Crs
2725 893 Crs
2733 1546 Crs
2741 1104 Crs
2749 1094 Crs
2757 1570 Crs
2765 792 Crs
2772 1470 Crs
2780 1543 Crs
2788 1004 Crs
2796 1425 Crs
2804 1417 Crs
2811 907 Crs
2819 1691 Crs
2827 718 Crs
2835 1628 Crs
2843 1395 Crs
2851 916 Crs
2858 1487 Crs
2866 1488 Crs
2874 1105 Crs
2882 1352 Crs
2890 1694 Crs
2898 829 Crs
2905 1729 Crs
2913 1200 Crs
2921 1234 Crs
2929 1820 Crs
2937 900 Crs
2944 1575 Crs
2952 1304 Crs
2960 1098 Crs
2968 1706 Crs
2976 989 Crs
2984 1327 Crs
2991 1582 Crs
2999 1024 Crs
3007 1776 Crs
3015 1294 Crs
3023 1024 Crs
3031 1520 Crs
3038 847 Crs
3046 1674 Crs
3054 979 Crs
3062 1390 Crs
3070 1468 Crs
3078 888 Crs
3085 1715 Crs
3093 859 Crs
3101 1621 Crs
3109 1190 Crs
3117 1328 Crs
3124 1601 Crs
3132 856 Crs
3140 1657 Crs
3148 1275 Crs
3156 1073 Crs
3164 1579 Crs
3171 898 Crs
3179 1743 Crs
3187 1108 Crs
3195 1274 Crs
3203 1342 Crs
3210 1021 Crs
3218 1660 Crs
3226 1161 Crs
3234 1213 Crs
3242 1686 Crs
3250 881 Crs
3257 1751 Crs
3265 1076 Crs
3273 1037 Crs
3281 1827 Crs
3289 793 Crs
3297 1727 Crs
3304 928 Crs
3312 1401 Crs
3320 1460 Crs
3328 810 Crs
3336 1791 Crs
3343 1330 Crs
3351 1069 Crs
3359 1580 Crs
3367 1008 Crs
3375 1374 Crs
3383 1146 Crs
3390 1126 Crs
3398 1781 Crs
3406 969 Crs
3414 1336 Crs
3422 1706 Crs
3430 691 Crs
3437 1848 Crs
3445 1111 Crs
3453 1132 Crs
3461 1790 Crs
3469 1016 Crs
3476 1421 Crs
3484 1547 Crs
3492 786 Crs
3500 1761 Crs
3508 1161 Crs
3516 1144 Crs
3523 1842 Crs
3531 727 Crs
3539 1593 Crs
3547 1169 Crs
3555 1162 Crs
3563 1674 Crs
3570 1093 Crs
3578 1255 Crs
3586 1371 Crs
3594 930 Crs
3602 1714 Crs
3609 1022 Crs
3617 1090 Crs
3625 1762 Crs
3633 858 Crs
3641 1449 Crs
3649 1433 Crs
3656 852 Crs
3664 1707 Crs
3672 1340 Crs
3680 1024 Crs
3688 1721 Crs
3695 1356 Crs
3703 935 Crs
3711 1727 Crs
3719 937 Crs
3727 1368 Crs
3735 1622 Crs
3742 1094 Crs
3750 1197 Crs
3758 1553 Crs
3766 768 Crs
3774 1656 Crs
3782 1152 Crs
3789 1060 Crs
3797 1523 Crs
3805 901 Crs
3813 1837 Crs
3821 844 Crs
3829 1522 Crs
3836 1505 Crs
3844 897 Crs
3852 1424 Crs
3860 1385 Crs
3868 1048 Crs
3875 1635 Crs
3883 1451 Crs
3891 1018 Crs
3899 1579 Crs
3907 1467 Crs
3915 1003 Crs
3922 1582 Crs
3930 1398 Crs
3938 1081 Crs
3946 1615 Crs
3954 1199 Crs
3961 1156 Crs
3969 1723 Crs
3977 1287 Crs
3985 1076 Crs
3993 1703 Crs
4001 1173 Crs
4008 1039 Crs
4016 1816 Crs
4024 1352 Crs
4032 991 Crs
4040 1677 Crs
4048 1219 Crs
4055 1061 Crs
4063 1729 Crs
4071 1013 Crs
4079 1281 Crs
4087 1729 Crs
4094 625 Crs
4102 1726 Crs
4110 1382 Crs
4118 1005 Crs
4126 1658 Crs
4134 1204 Crs
4141 1032 Crs
4149 1786 Crs
4157 1315 Crs
4165 938 Crs
4173 1749 Crs
4181 1260 Crs
4188 950 Crs
4196 1694 Crs
4204 1425 Crs
4212 1027 Crs
4220 1605 Crs
4227 1329 Crs
4235 914 Crs
4243 1631 Crs
4251 1056 Crs
4259 1403 Crs
4267 1518 Crs
4274 1046 Crs
4282 1435 Crs
4290 1591 Crs
4298 615 Crs
4306 1636 Crs
4314 1299 Crs
4321 1068 Crs
4329 1559 Crs
4337 1129 Crs
4345 976 Crs
4353 1720 Crs
4360 1307 Crs
4368 987 Crs
4376 1624 Crs
4384 1472 Crs
4392 1097 Crs
4400 1385 Crs
4407 1461 Crs
4415 921 Crs
4423 1584 Crs
4431 1431 Crs
4439 830 Crs
4447 1606 Crs
4454 1276 Crs
4462 994 Crs
4470 1658 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
