%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 03:52:43 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 03:52:43 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 778 M
3364 0 V
stroke
LTb
1106 778 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 50000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1109 M
3364 0 V
stroke
LTb
1106 1109 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1439 M
3364 0 V
stroke
LTb
1106 1439 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 150000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1770 M
3364 0 V
stroke
LTb
1106 1770 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 200000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 250000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1709 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2312 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2915 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
3517 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
4120 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
12 192 V
12 -43 V
12 -2 V
12 164 V
12 -163 V
12 162 V
12 -74 V
12 -83 V
13 19 V
12 130 V
12 44 V
12 -76 V
12 24 V
12 170 V
12 8 V
12 9 V
12 -15 V
12 122 V
12 -172 V
12 93 V
12 -62 V
12 33 V
12 -199 V
12 277 V
12 92 V
12 -112 V
13 70 V
12 125 V
12 -62 V
12 -138 V
12 93 V
12 48 V
12 -115 V
12 4 V
12 249 V
12 -106 V
12 -94 V
12 180 V
12 -87 V
12 15 V
12 -94 V
12 158 V
12 -36 V
13 -137 V
12 -70 V
12 -54 V
12 49 V
12 -44 V
12 166 V
12 259 V
12 -99 V
12 -31 V
12 2 V
12 94 V
12 -87 V
12 111 V
12 -80 V
12 86 V
12 -20 V
12 -21 V
12 -140 V
13 126 V
12 -235 V
12 119 V
12 -45 V
12 -25 V
12 -63 V
12 -5 V
12 82 V
12 -150 V
12 -17 V
12 -105 V
12 74 V
12 197 V
12 -360 V
12 86 V
12 178 V
12 -64 V
13 400 V
12 -99 V
12 -376 V
12 171 V
12 215 V
12 -242 V
12 86 V
12 162 V
12 -264 V
12 145 V
12 -12 V
12 -55 V
12 -106 V
12 146 V
12 -19 V
12 -3 V
12 105 V
13 44 V
12 177 V
12 -18 V
12 349 V
12 -485 V
12 -155 V
12 78 V
12 54 V
12 156 V
stroke 2360 1427 M
12 361 V
12 -863 V
12 276 V
12 41 V
12 536 V
12 -39 V
12 -151 V
12 7 V
12 -52 V
13 10 V
12 40 V
12 33 V
12 23 V
12 37 V
12 -23 V
12 -8 V
12 42 V
12 58 V
12 -82 V
12 -8 V
12 -84 V
12 -434 V
12 -382 V
12 -137 V
12 161 V
12 184 V
13 277 V
12 230 V
12 -757 V
12 518 V
12 161 V
12 -275 V
12 678 V
12 -645 V
12 171 V
12 41 V
12 -310 V
12 335 V
12 -332 V
12 138 V
12 -250 V
12 30 V
12 -33 V
12 -27 V
13 496 V
12 -97 V
12 -270 V
12 163 V
12 140 V
12 -278 V
12 152 V
12 -160 V
12 64 V
12 -336 V
12 406 V
12 -186 V
12 -11 V
12 249 V
12 -257 V
12 -22 V
12 140 V
13 94 V
12 -88 V
12 -138 V
12 302 V
12 -113 V
12 -208 V
12 198 V
12 -155 V
12 -150 V
12 62 V
12 -89 V
12 -40 V
12 310 V
12 184 V
12 -396 V
12 365 V
12 -260 V
12 116 V
13 6 V
12 -142 V
12 82 V
12 66 V
12 -19 V
12 62 V
12 -22 V
12 -56 V
12 20 V
12 -36 V
12 71 V
12 -229 V
12 207 V
12 -261 V
12 337 V
12 -107 V
12 -99 V
13 142 V
12 136 V
12 -196 V
12 -170 V
12 298 V
12 -40 V
12 -62 V
12 17 V
stroke 3614 1115 M
12 -95 V
12 -114 V
12 386 V
12 -121 V
12 105 V
12 -169 V
12 97 V
12 -196 V
12 356 V
13 -300 V
12 -50 V
12 -53 V
12 99 V
12 -84 V
12 176 V
12 7 V
12 12 V
12 -75 V
12 280 V
12 -143 V
12 -99 V
12 -23 V
12 160 V
12 -44 V
12 -173 V
12 98 V
12 190 V
13 -237 V
12 71 V
12 53 V
12 -214 V
12 308 V
12 -110 V
12 105 V
12 -288 V
12 234 V
12 -236 V
12 310 V
12 -32 V
12 -5 V
12 -195 V
12 80 V
12 70 V
12 -63 V
13 -24 V
12 -131 V
12 334 V
12 -404 V
12 264 V
12 -186 V
12 98 V
12 104 V
12 -104 V
12 -81 V
12 262 V
12 -137 V
12 -69 V
12 45 V
12 -29 V
12 52 V
12 -131 V
12 216 V
13 -217 V
12 59 V
12 83 V
12 -105 V
12 58 V
12 -183 V
12 164 V
12 -121 V
12 -128 V
1106 448 Crs
1118 640 Crs
1130 597 Crs
1142 595 Crs
1154 759 Crs
1166 596 Crs
1178 758 Crs
1190 684 Crs
1202 601 Crs
1215 620 Crs
1227 750 Crs
1239 794 Crs
1251 718 Crs
1263 742 Crs
1275 912 Crs
1287 920 Crs
1299 929 Crs
1311 914 Crs
1323 1036 Crs
1335 864 Crs
1347 957 Crs
1359 895 Crs
1371 928 Crs
1383 729 Crs
1395 1006 Crs
1407 1098 Crs
1419 986 Crs
1432 1056 Crs
1444 1181 Crs
1456 1119 Crs
1468 981 Crs
1480 1074 Crs
1492 1122 Crs
1504 1007 Crs
1516 1011 Crs
1528 1260 Crs
1540 1154 Crs
1552 1060 Crs
1564 1240 Crs
1576 1153 Crs
1588 1168 Crs
1600 1074 Crs
1612 1232 Crs
1624 1196 Crs
1637 1059 Crs
1649 989 Crs
1661 935 Crs
1673 984 Crs
1685 940 Crs
1697 1106 Crs
1709 1365 Crs
1721 1266 Crs
1733 1235 Crs
1745 1237 Crs
1757 1331 Crs
1769 1244 Crs
1781 1355 Crs
1793 1275 Crs
1805 1361 Crs
1817 1341 Crs
1829 1320 Crs
1841 1180 Crs
1854 1306 Crs
1866 1071 Crs
1878 1190 Crs
1890 1145 Crs
1902 1120 Crs
1914 1057 Crs
1926 1052 Crs
1938 1134 Crs
1950 984 Crs
1962 967 Crs
1974 862 Crs
1986 936 Crs
1998 1133 Crs
2010 773 Crs
2022 859 Crs
2034 1037 Crs
2046 973 Crs
2059 1373 Crs
2071 1274 Crs
2083 898 Crs
2095 1069 Crs
2107 1284 Crs
2119 1042 Crs
2131 1128 Crs
2143 1290 Crs
2155 1026 Crs
2167 1171 Crs
2179 1159 Crs
2191 1104 Crs
2203 998 Crs
2215 1144 Crs
2227 1125 Crs
2239 1122 Crs
2251 1227 Crs
2264 1271 Crs
2276 1448 Crs
2288 1430 Crs
2300 1779 Crs
2312 1294 Crs
2324 1139 Crs
2336 1217 Crs
2348 1271 Crs
2360 1427 Crs
2372 1788 Crs
2384 925 Crs
2396 1201 Crs
2408 1242 Crs
2420 1778 Crs
2432 1739 Crs
2444 1588 Crs
2456 1595 Crs
2468 1543 Crs
2481 1553 Crs
2493 1593 Crs
2505 1626 Crs
2517 1649 Crs
2529 1686 Crs
2541 1663 Crs
2553 1655 Crs
2565 1697 Crs
2577 1755 Crs
2589 1673 Crs
2601 1665 Crs
2613 1581 Crs
2625 1147 Crs
2637 765 Crs
2649 628 Crs
2661 789 Crs
2673 973 Crs
2686 1250 Crs
2698 1480 Crs
2710 723 Crs
2722 1241 Crs
2734 1402 Crs
2746 1127 Crs
2758 1805 Crs
2770 1160 Crs
2782 1331 Crs
2794 1372 Crs
2806 1062 Crs
2818 1397 Crs
2830 1065 Crs
2842 1203 Crs
2854 953 Crs
2866 983 Crs
2878 950 Crs
2890 923 Crs
2903 1419 Crs
2915 1322 Crs
2927 1052 Crs
2939 1215 Crs
2951 1355 Crs
2963 1077 Crs
2975 1229 Crs
2987 1069 Crs
2999 1133 Crs
3011 797 Crs
3023 1203 Crs
3035 1017 Crs
3047 1006 Crs
3059 1255 Crs
3071 998 Crs
3083 976 Crs
3095 1116 Crs
3108 1210 Crs
3120 1122 Crs
3132 984 Crs
3144 1286 Crs
3156 1173 Crs
3168 965 Crs
3180 1163 Crs
3192 1008 Crs
3204 858 Crs
3216 920 Crs
3228 831 Crs
3240 791 Crs
3252 1101 Crs
3264 1285 Crs
3276 889 Crs
3288 1254 Crs
3300 994 Crs
3312 1110 Crs
3325 1116 Crs
3337 974 Crs
3349 1056 Crs
3361 1122 Crs
3373 1103 Crs
3385 1165 Crs
3397 1143 Crs
3409 1087 Crs
3421 1107 Crs
3433 1071 Crs
3445 1142 Crs
3457 913 Crs
3469 1120 Crs
3481 859 Crs
3493 1196 Crs
3505 1089 Crs
3517 990 Crs
3530 1132 Crs
3542 1268 Crs
3554 1072 Crs
3566 902 Crs
3578 1200 Crs
3590 1160 Crs
3602 1098 Crs
3614 1115 Crs
3626 1020 Crs
3638 906 Crs
3650 1292 Crs
3662 1171 Crs
3674 1276 Crs
3686 1107 Crs
3698 1204 Crs
3710 1008 Crs
3722 1364 Crs
3735 1064 Crs
3747 1014 Crs
3759 961 Crs
3771 1060 Crs
3783 976 Crs
3795 1152 Crs
3807 1159 Crs
3819 1171 Crs
3831 1096 Crs
3843 1376 Crs
3855 1233 Crs
3867 1134 Crs
3879 1111 Crs
3891 1271 Crs
3903 1227 Crs
3915 1054 Crs
3927 1152 Crs
3939 1342 Crs
3952 1105 Crs
3964 1176 Crs
3976 1229 Crs
3988 1015 Crs
4000 1323 Crs
4012 1213 Crs
4024 1318 Crs
4036 1030 Crs
4048 1264 Crs
4060 1028 Crs
4072 1338 Crs
4084 1306 Crs
4096 1301 Crs
4108 1106 Crs
4120 1186 Crs
4132 1256 Crs
4144 1193 Crs
4157 1169 Crs
4169 1038 Crs
4181 1372 Crs
4193 968 Crs
4205 1232 Crs
4217 1046 Crs
4229 1144 Crs
4241 1248 Crs
4253 1144 Crs
4265 1063 Crs
4277 1325 Crs
4289 1188 Crs
4301 1119 Crs
4313 1164 Crs
4325 1135 Crs
4337 1187 Crs
4349 1056 Crs
4361 1272 Crs
4374 1055 Crs
4386 1114 Crs
4398 1197 Crs
4410 1092 Crs
4422 1150 Crs
4434 967 Crs
4446 1131 Crs
4458 1010 Crs
4470 882 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
