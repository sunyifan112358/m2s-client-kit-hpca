%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Sep  1 03:52:43 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 03:52:43 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
3364 0 V
stroke
LTb
1106 448 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 632 M
3364 0 V
stroke
LTb
1106 632 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 815 M
3364 0 V
stroke
LTb
1106 815 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 999 M
3364 0 V
stroke
LTb
1106 999 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 60000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1182 M
3364 0 V
stroke
LTb
1106 1182 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 80000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1366 M
3364 0 V
stroke
LTb
1106 1366 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1549 M
3364 0 V
stroke
LTb
1106 1549 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 120000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1733 M
3364 0 V
stroke
LTb
1106 1733 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 140000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1916 M
3364 0 V
stroke
LTb
1106 1916 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 160000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2100 M
3364 0 V
stroke
LTb
1106 2100 M
63 0 V
3301 0 R
-63 0 V
-3385 0 R
( 180000) Rshow
1.000 UL
LTb
1106 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 0) Cshow
1.000 UL
LTb
1709 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 500000) Cshow
1.000 UL
LTb
2312 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1e+06) Cshow
1.000 UL
LTb
2915 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 1.5e+06) Cshow
1.000 UL
LTb
3517 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2e+06) Cshow
1.000 UL
LTb
4120 448 M
0 63 V
0 1589 R
0 -63 V
0 -1729 R
( 2.5e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
LCb setrgbcolor
280 1274 M
currentpoint gsave translate 90 rotate 0 0 M
(Network Bandwidth \(Byte\)) Cshow
grestore
LTb
LCb setrgbcolor
2788 98 M
(Time\(Cycle\)) Cshow
LTb
2788 2310 M
(Offered Bandwidth - Sampled at 10000 Cycles ) Cshow
1.000 UP
1.000 UL
LTb
0.500 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
1106 448 M
12 268 V
12 -60 V
12 -3 V
12 226 V
12 -227 V
12 228 V
12 -104 V
12 -115 V
13 27 V
12 179 V
12 61 V
12 -106 V
12 35 V
12 234 V
12 16 V
12 5 V
12 -28 V
12 177 V
12 -247 V
12 134 V
12 -85 V
12 34 V
12 -266 V
12 292 V
12 307 V
12 -250 V
13 98 V
12 161 V
12 -78 V
12 -178 V
12 118 V
12 56 V
12 -161 V
12 0 V
12 297 V
12 -169 V
12 -113 V
12 228 V
12 -111 V
12 16 V
12 -104 V
12 198 V
12 -11 V
13 -177 V
12 -76 V
12 -92 V
12 2 V
12 -57 V
12 205 V
12 295 V
12 -120 V
12 -29 V
12 0 V
12 104 V
12 -101 V
12 124 V
12 -92 V
12 95 V
12 -16 V
12 -28 V
12 -159 V
13 149 V
12 -273 V
12 132 V
12 -48 V
12 -26 V
12 -80 V
12 7 V
12 103 V
12 -170 V
12 -50 V
12 -107 V
12 90 V
12 217 V
12 -423 V
12 129 V
12 142 V
12 -36 V
13 367 V
12 -193 V
12 -242 V
12 97 V
12 138 V
12 -153 V
12 64 V
12 36 V
12 -108 V
12 135 V
12 -144 V
12 42 V
12 -127 V
12 99 V
12 -34 V
12 -50 V
12 94 V
13 132 V
12 8 V
12 52 V
12 217 V
12 -374 V
12 -91 V
12 80 V
12 4 V
12 122 V
stroke 2360 1232 M
12 251 V
12 -589 V
12 187 V
12 55 V
12 428 V
12 25 V
12 -20 V
12 63 V
12 -21 V
13 -8 V
12 44 V
12 32 V
12 10 V
12 7 V
12 -18 V
12 -22 V
12 8 V
12 36 V
12 -49 V
12 -17 V
12 -62 V
12 -461 V
12 -382 V
12 -121 V
12 88 V
12 336 V
13 -47 V
12 345 V
12 -477 V
12 555 V
12 214 V
12 -356 V
12 178 V
12 -15 V
12 68 V
12 -9 V
12 8 V
12 -3 V
12 -67 V
12 -381 V
12 32 V
12 44 V
12 266 V
12 -136 V
13 241 V
12 111 V
12 -151 V
12 89 V
12 155 V
12 -9 V
12 387 V
12 -462 V
12 -55 V
12 -293 V
12 330 V
12 17 V
12 -141 V
12 170 V
12 -190 V
12 -66 V
12 239 V
13 428 V
12 5 V
12 -553 V
12 243 V
12 66 V
12 -261 V
12 289 V
12 -496 V
12 -375 V
12 21 V
12 218 V
12 -274 V
12 529 V
12 -129 V
12 4 V
12 255 V
12 -144 V
12 207 V
13 -152 V
12 -368 V
12 269 V
12 58 V
12 60 V
12 209 V
12 -140 V
12 -53 V
12 -88 V
12 -126 V
12 54 V
12 -166 V
12 175 V
12 -188 V
12 374 V
12 -129 V
12 -69 V
13 231 V
12 256 V
12 -404 V
12 -273 V
12 291 V
12 139 V
12 -288 V
12 124 V
stroke 3614 1452 M
12 -61 V
12 -257 V
12 404 V
12 86 V
12 47 V
12 -110 V
12 -84 V
12 -89 V
12 236 V
13 -303 V
12 -119 V
12 117 V
12 146 V
12 -220 V
12 291 V
12 -25 V
12 -86 V
12 8 V
12 341 V
12 -399 V
12 -93 V
12 65 V
12 125 V
12 147 V
12 -82 V
12 -55 V
12 79 V
13 -223 V
12 190 V
12 -32 V
12 -179 V
12 189 V
12 95 V
12 -93 V
12 -224 V
12 193 V
12 -72 V
12 206 V
12 -69 V
12 -69 V
12 -120 V
12 64 V
12 81 V
12 18 V
13 161 V
12 -311 V
12 250 V
12 -350 V
12 148 V
12 -95 V
12 227 V
12 11 V
12 -110 V
12 -85 V
12 259 V
12 61 V
12 -75 V
12 -25 V
12 -102 V
12 112 V
12 -170 V
12 371 V
13 -335 V
12 225 V
12 41 V
12 -65 V
12 191 V
12 -387 V
12 284 V
12 -43 V
12 -222 V
1106 448 Crs
1118 716 Crs
1130 656 Crs
1142 653 Crs
1154 879 Crs
1166 652 Crs
1178 880 Crs
1190 776 Crs
1202 661 Crs
1215 688 Crs
1227 867 Crs
1239 928 Crs
1251 822 Crs
1263 857 Crs
1275 1091 Crs
1287 1107 Crs
1299 1112 Crs
1311 1084 Crs
1323 1261 Crs
1335 1014 Crs
1347 1148 Crs
1359 1063 Crs
1371 1097 Crs
1383 831 Crs
1395 1123 Crs
1407 1430 Crs
1419 1180 Crs
1432 1278 Crs
1444 1439 Crs
1456 1361 Crs
1468 1183 Crs
1480 1301 Crs
1492 1357 Crs
1504 1196 Crs
1516 1196 Crs
1528 1493 Crs
1540 1324 Crs
1552 1211 Crs
1564 1439 Crs
1576 1328 Crs
1588 1344 Crs
1600 1240 Crs
1612 1438 Crs
1624 1427 Crs
1637 1250 Crs
1649 1174 Crs
1661 1082 Crs
1673 1084 Crs
1685 1027 Crs
1697 1232 Crs
1709 1527 Crs
1721 1407 Crs
1733 1378 Crs
1745 1378 Crs
1757 1482 Crs
1769 1381 Crs
1781 1505 Crs
1793 1413 Crs
1805 1508 Crs
1817 1492 Crs
1829 1464 Crs
1841 1305 Crs
1854 1454 Crs
1866 1181 Crs
1878 1313 Crs
1890 1265 Crs
1902 1239 Crs
1914 1159 Crs
1926 1166 Crs
1938 1269 Crs
1950 1099 Crs
1962 1049 Crs
1974 942 Crs
1986 1032 Crs
1998 1249 Crs
2010 826 Crs
2022 955 Crs
2034 1097 Crs
2046 1061 Crs
2059 1428 Crs
2071 1235 Crs
2083 993 Crs
2095 1090 Crs
2107 1228 Crs
2119 1075 Crs
2131 1139 Crs
2143 1175 Crs
2155 1067 Crs
2167 1202 Crs
2179 1058 Crs
2191 1100 Crs
2203 973 Crs
2215 1072 Crs
2227 1038 Crs
2239 988 Crs
2251 1082 Crs
2264 1214 Crs
2276 1222 Crs
2288 1274 Crs
2300 1491 Crs
2312 1117 Crs
2324 1026 Crs
2336 1106 Crs
2348 1110 Crs
2360 1232 Crs
2372 1483 Crs
2384 894 Crs
2396 1081 Crs
2408 1136 Crs
2420 1564 Crs
2432 1589 Crs
2444 1569 Crs
2456 1632 Crs
2468 1611 Crs
2481 1603 Crs
2493 1647 Crs
2505 1679 Crs
2517 1689 Crs
2529 1696 Crs
2541 1678 Crs
2553 1656 Crs
2565 1664 Crs
2577 1700 Crs
2589 1651 Crs
2601 1634 Crs
2613 1572 Crs
2625 1111 Crs
2637 729 Crs
2649 608 Crs
2661 696 Crs
2673 1032 Crs
2686 985 Crs
2698 1330 Crs
2710 853 Crs
2722 1408 Crs
2734 1622 Crs
2746 1266 Crs
2758 1444 Crs
2770 1429 Crs
2782 1497 Crs
2794 1488 Crs
2806 1496 Crs
2818 1493 Crs
2830 1426 Crs
2842 1045 Crs
2854 1077 Crs
2866 1121 Crs
2878 1387 Crs
2890 1251 Crs
2903 1492 Crs
2915 1603 Crs
2927 1452 Crs
2939 1541 Crs
2951 1696 Crs
2963 1687 Crs
2975 2074 Crs
2987 1612 Crs
2999 1557 Crs
3011 1264 Crs
3023 1594 Crs
3035 1611 Crs
3047 1470 Crs
3059 1640 Crs
3071 1450 Crs
3083 1384 Crs
3095 1623 Crs
3108 2051 Crs
3120 2056 Crs
3132 1503 Crs
3144 1746 Crs
3156 1812 Crs
3168 1551 Crs
3180 1840 Crs
3192 1344 Crs
3204 969 Crs
3216 990 Crs
3228 1208 Crs
3240 934 Crs
3252 1463 Crs
3264 1334 Crs
3276 1338 Crs
3288 1593 Crs
3300 1449 Crs
3312 1656 Crs
3325 1504 Crs
3337 1136 Crs
3349 1405 Crs
3361 1463 Crs
3373 1523 Crs
3385 1732 Crs
3397 1592 Crs
3409 1539 Crs
3421 1451 Crs
3433 1325 Crs
3445 1379 Crs
3457 1213 Crs
3469 1388 Crs
3481 1200 Crs
3493 1574 Crs
3505 1445 Crs
3517 1376 Crs
3530 1607 Crs
3542 1863 Crs
3554 1459 Crs
3566 1186 Crs
3578 1477 Crs
3590 1616 Crs
3602 1328 Crs
3614 1452 Crs
3626 1391 Crs
3638 1134 Crs
3650 1538 Crs
3662 1624 Crs
3674 1671 Crs
3686 1561 Crs
3698 1477 Crs
3710 1388 Crs
3722 1624 Crs
3735 1321 Crs
3747 1202 Crs
3759 1319 Crs
3771 1465 Crs
3783 1245 Crs
3795 1536 Crs
3807 1511 Crs
3819 1425 Crs
3831 1433 Crs
3843 1774 Crs
3855 1375 Crs
3867 1282 Crs
3879 1347 Crs
3891 1472 Crs
3903 1619 Crs
3915 1537 Crs
3927 1482 Crs
3939 1561 Crs
3952 1338 Crs
3964 1528 Crs
3976 1496 Crs
3988 1317 Crs
4000 1506 Crs
4012 1601 Crs
4024 1508 Crs
4036 1284 Crs
4048 1477 Crs
4060 1405 Crs
4072 1611 Crs
4084 1542 Crs
4096 1473 Crs
4108 1353 Crs
4120 1417 Crs
4132 1498 Crs
4144 1516 Crs
4157 1677 Crs
4169 1366 Crs
4181 1616 Crs
4193 1266 Crs
4205 1414 Crs
4217 1319 Crs
4229 1546 Crs
4241 1557 Crs
4253 1447 Crs
4265 1362 Crs
4277 1621 Crs
4289 1682 Crs
4301 1607 Crs
4313 1582 Crs
4325 1480 Crs
4337 1592 Crs
4349 1422 Crs
4361 1793 Crs
4374 1458 Crs
4386 1683 Crs
4398 1724 Crs
4410 1659 Crs
4422 1850 Crs
4434 1463 Crs
4446 1747 Crs
4458 1704 Crs
4470 1482 Crs
1.000 UL
LTb
1106 2100 N
0 -1652 V
3364 0 V
0 1652 V
-3364 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
